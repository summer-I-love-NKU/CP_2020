Terminals unused in grammar

   DOT
   RETURN
   ELSE_IF
   b_OR
   b_NOR
   b_NOT
   pre_SELF_ADD
   pre_SELF_SUB


状态 110 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    2 fake_1: %empty

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | decl_stmt SEMICOLON
    7          | assign_stmt SEMICOLON
    8          | IO_stmt SEMICOLON
    9          | if_else_while_for_stmt
   10          | LBRACE fake_2 statements RBRACE

   11 fake_2: %empty

   12 expr: IDENTIFIER
   13     | INTEGER
   14     | CHAR
   15     | STRING
   16     | BOOL
   17     | expr ADD expr
   18     | expr SUB expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | SUB expr
   23     | expr AND expr
   24     | expr OR expr
   25     | NOT expr
   26     | expr LESS_EQ expr
   27     | expr LESS_THAN expr
   28     | expr MORE_EQ expr
   29     | expr MORE_THAN expr
   30     | expr NOT_EQ expr
   31     | expr EQ expr

   32 decl_stmt: Type IDENTIFIER ASSIGN expr
   33          | Type IDENTIFIER
   34          | decl_stmt COMMA IDENTIFIER
   35          | decl_stmt COMMA IDENTIFIER ASSIGN expr

   36 assign_stmt: IDENTIFIER ASSIGN expr
   37            | IDENTIFIER ADD_ASSIGN expr
   38            | IDENTIFIER SUB_ASSIGN expr
   39            | IDENTIFIER MUL_ASSIGN expr
   40            | IDENTIFIER DIV_ASSIGN expr
   41            | expr SELF_ADD
   42            | expr SELF_SUB

   43 IO_stmt: PRINTF LPAREN STRING COMMA expr RPAREN
   44        | SCANF LPAREN STRING COMMA b_AND expr RPAREN

   45 for_expr_1: decl_stmt
   46           | assign_stmt
   47           | %empty

   48 for_expr_2: expr
   49           | %empty

   50 for_expr_3: assign_stmt
   51           | %empty

   52 if_else_while_for_stmt: IF LPAREN expr RPAREN statement
   53                       | IF LPAREN expr RPAREN statement ELSE statement
   54                       | WHILE LPAREN expr RPAREN statement
   55                       | FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

   56 Type: T_INT
   57     | T_CHAR
   58     | T_BOOL
   59     | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 56
T_CHAR (259) 57
T_BOOL (260) 58
T_VOID (261) 59
ASSIGN (262) 32 35 36
ADD_ASSIGN (263) 37
SUB_ASSIGN (264) 38
MUL_ASSIGN (265) 39
DIV_ASSIGN (266) 40
EQ (267) 31
NOT_EQ (268) 30
LESS_THAN (269) 27
LESS_EQ (270) 26
MORE_THAN (271) 29
MORE_EQ (272) 28
AND (273) 23
OR (274) 24
NOT (275) 25
ADD (276) 17
SUB (277) 18 22
MUL (278) 19
DIV (279) 20
MOD (280) 21
SELF_ADD (281) 41
SELF_SUB (282) 42
SEMICOLON (283) 5 6 7 8 55
COMMA (284) 34 35 43 44
DOT (285)
LPAREN (286) 1 43 44 52 53 54 55
RPAREN (287) 1 43 44 52 53 54 55
LBRACE (288) 1 10
RBRACE (289) 1 10
IDENTIFIER (290) 12 32 33 34 35 36 37 38 39 40
INTEGER (291) 13
CHAR (292) 14
BOOL (293) 16
STRING (294) 15 43 44
MAIN (295) 1
RETURN (296)
FOR (297) 55
WHILE (298) 54
IF (299) 52 53
ELSE (300) 53
ELSE_IF (301)
PRINTF (302) 43
SCANF (303) 44
b_OR (304)
b_NOR (305)
b_AND (306) 44
UMINUS (307)
b_NOT (308)
pre_SELF_ADD (309)
pre_SELF_SUB (310)
GET_ADDRESS (311)


Nonterminals, with rules where they appear

$accept (57)
    左： 0
program (58)
    左： 1, 右： 0
fake_1 (59)
    左： 2, 右： 1
statements (60)
    左： 3 4, 右： 1 4 10
statement (61)
    左： 5 6 7 8 9 10, 右： 3 4 52 53 54 55
fake_2 (62)
    左： 11, 右： 10
expr (63)
    左： 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31, 右： 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 35 36
    37 38 39 40 41 42 43 44 48 52 53 54
decl_stmt (64)
    左： 32 33 34 35, 右： 6 34 35 45
assign_stmt (65)
    左： 36 37 38 39 40 41 42, 右： 7 46 50
IO_stmt (66)
    左： 43 44, 右： 8
for_expr_1 (67)
    左： 45 46 47, 右： 55
for_expr_2 (68)
    左： 48 49, 右： 55
for_expr_3 (69)
    左： 50 51, 右： 55
if_else_while_for_stmt (70)
    左： 52 53 54 55, 右： 9
Type (71)
    左： 56 57 58 59, 右： 1 32 33


State 0

    0 $accept: . program $end

    T_INT   shift, and go to state 1
    T_CHAR  shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    program  转到状态 5
    Type     转到状态 6


State 1

   56 Type: T_INT .

    $default  reduce using rule 56 (Type)


State 2

   57 Type: T_CHAR .

    $default  reduce using rule 57 (Type)


State 3

   58 Type: T_BOOL .

    $default  reduce using rule 58 (Type)


State 4

   59 Type: T_VOID .

    $default  reduce using rule 59 (Type)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 7


State 6

    1 program: Type . MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    MAIN  shift, and go to state 8


State 7

    0 $accept: program $end .

    $default  接受


State 8

    1 program: Type MAIN . LPAREN RPAREN LBRACE fake_1 statements RBRACE

    LPAREN  shift, and go to state 9


State 9

    1 program: Type MAIN LPAREN . RPAREN LBRACE fake_1 statements RBRACE

    RPAREN  shift, and go to state 10


State 10

    1 program: Type MAIN LPAREN RPAREN . LBRACE fake_1 statements RBRACE

    LBRACE  shift, and go to state 11


State 11

    1 program: Type MAIN LPAREN RPAREN LBRACE . fake_1 statements RBRACE

    $default  reduce using rule 2 (fake_1)

    fake_1  转到状态 12


State 12

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statements              转到状态 27
    statement               转到状态 28
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 13

   25 expr: NOT . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 36


State 14

   22 expr: SUB . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 37


State 15

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 16

   10 statement: LBRACE . fake_2 statements RBRACE

    $default  reduce using rule 11 (fake_2)

    fake_2  转到状态 38


State 17

   12 expr: IDENTIFIER .
   36 assign_stmt: IDENTIFIER . ASSIGN expr
   37            | IDENTIFIER . ADD_ASSIGN expr
   38            | IDENTIFIER . SUB_ASSIGN expr
   39            | IDENTIFIER . MUL_ASSIGN expr
   40            | IDENTIFIER . DIV_ASSIGN expr

    ASSIGN      shift, and go to state 39
    ADD_ASSIGN  shift, and go to state 40
    SUB_ASSIGN  shift, and go to state 41
    MUL_ASSIGN  shift, and go to state 42
    DIV_ASSIGN  shift, and go to state 43

    $default  reduce using rule 12 (expr)


State 18

   13 expr: INTEGER .

    $default  reduce using rule 13 (expr)


State 19

   14 expr: CHAR .

    $default  reduce using rule 14 (expr)


State 20

   16 expr: BOOL .

    $default  reduce using rule 16 (expr)


State 21

   15 expr: STRING .

    $default  reduce using rule 15 (expr)


State 22

   55 if_else_while_for_stmt: FOR . LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    LPAREN  shift, and go to state 44


State 23

   54 if_else_while_for_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 45


State 24

   52 if_else_while_for_stmt: IF . LPAREN expr RPAREN statement
   53                       | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 46


State 25

   43 IO_stmt: PRINTF . LPAREN STRING COMMA expr RPAREN

    LPAREN  shift, and go to state 47


State 26

   44 IO_stmt: SCANF . LPAREN STRING COMMA b_AND expr RPAREN

    LPAREN  shift, and go to state 48


State 27

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements . RBRACE
    4 statements: statements . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    RBRACE      shift, and go to state 49
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 50
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 28

    3 statements: statement .

    $default  reduce using rule 3 (statements)


State 29

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   41 assign_stmt: expr . SELF_ADD
   42            | expr . SELF_SUB

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63
    SELF_ADD   shift, and go to state 64
    SELF_SUB   shift, and go to state 65


State 30

    6 statement: decl_stmt . SEMICOLON
   34 decl_stmt: decl_stmt . COMMA IDENTIFIER
   35          | decl_stmt . COMMA IDENTIFIER ASSIGN expr

    SEMICOLON  shift, and go to state 66
    COMMA      shift, and go to state 67


State 31

    7 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 32

    8 statement: IO_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 33

    9 statement: if_else_while_for_stmt .

    $default  reduce using rule 9 (statement)


State 34

   32 decl_stmt: Type . IDENTIFIER ASSIGN expr
   33          | Type . IDENTIFIER

    IDENTIFIER  shift, and go to state 70


State 35

   12 expr: IDENTIFIER .

    $default  reduce using rule 12 (expr)


State 36

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | NOT expr .
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    $default  reduce using rule 25 (expr)


State 37

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | SUB expr .
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    $default  reduce using rule 22 (expr)


State 38

   10 statement: LBRACE fake_2 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statements              转到状态 71
    statement               转到状态 28
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 39

   36 assign_stmt: IDENTIFIER ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 72


State 40

   37 assign_stmt: IDENTIFIER ADD_ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 73


State 41

   38 assign_stmt: IDENTIFIER SUB_ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 74


State 42

   39 assign_stmt: IDENTIFIER MUL_ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 75


State 43

   40 assign_stmt: IDENTIFIER DIV_ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 76


State 44

   55 if_else_while_for_stmt: FOR LPAREN . for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 47 (for_expr_1)

    expr         转到状态 29
    decl_stmt    转到状态 77
    assign_stmt  转到状态 78
    for_expr_1   转到状态 79
    Type         转到状态 34


State 45

   54 if_else_while_for_stmt: WHILE LPAREN . expr RPAREN statement

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 80


State 46

   52 if_else_while_for_stmt: IF LPAREN . expr RPAREN statement
   53                       | IF LPAREN . expr RPAREN statement ELSE statement

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 81


State 47

   43 IO_stmt: PRINTF LPAREN . STRING COMMA expr RPAREN

    STRING  shift, and go to state 82


State 48

   44 IO_stmt: SCANF LPAREN . STRING COMMA b_AND expr RPAREN

    STRING  shift, and go to state 83


State 49

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE .

    $default  reduce using rule 1 (program)


State 50

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 51

   31 expr: expr EQ . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 84


State 52

   30 expr: expr NOT_EQ . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 85


State 53

   27 expr: expr LESS_THAN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 86


State 54

   26 expr: expr LESS_EQ . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 87


State 55

   29 expr: expr MORE_THAN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 88


State 56

   28 expr: expr MORE_EQ . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 89


State 57

   23 expr: expr AND . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 90


State 58

   24 expr: expr OR . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 91


State 59

   17 expr: expr ADD . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 92


State 60

   18 expr: expr SUB . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 93


State 61

   19 expr: expr MUL . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 94


State 62

   20 expr: expr DIV . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 95


State 63

   21 expr: expr MOD . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 96


State 64

   41 assign_stmt: expr SELF_ADD .

    $default  reduce using rule 41 (assign_stmt)


State 65

   42 assign_stmt: expr SELF_SUB .

    $default  reduce using rule 42 (assign_stmt)


State 66

    6 statement: decl_stmt SEMICOLON .

    $default  reduce using rule 6 (statement)


State 67

   34 decl_stmt: decl_stmt COMMA . IDENTIFIER
   35          | decl_stmt COMMA . IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 97


State 68

    7 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 7 (statement)


State 69

    8 statement: IO_stmt SEMICOLON .

    $default  reduce using rule 8 (statement)


State 70

   32 decl_stmt: Type IDENTIFIER . ASSIGN expr
   33          | Type IDENTIFIER .

    ASSIGN  shift, and go to state 98

    $default  reduce using rule 33 (decl_stmt)


State 71

    4 statements: statements . statement
   10 statement: LBRACE fake_2 statements . RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    RBRACE      shift, and go to state 99
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 50
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 72

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   36 assign_stmt: IDENTIFIER ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 36 (assign_stmt)


State 73

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   37 assign_stmt: IDENTIFIER ADD_ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 37 (assign_stmt)


State 74

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   38 assign_stmt: IDENTIFIER SUB_ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 38 (assign_stmt)


State 75

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   39 assign_stmt: IDENTIFIER MUL_ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 39 (assign_stmt)


State 76

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   40 assign_stmt: IDENTIFIER DIV_ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 40 (assign_stmt)


State 77

   34 decl_stmt: decl_stmt . COMMA IDENTIFIER
   35          | decl_stmt . COMMA IDENTIFIER ASSIGN expr
   45 for_expr_1: decl_stmt .

    COMMA  shift, and go to state 67

    $default  reduce using rule 45 (for_expr_1)


State 78

   46 for_expr_1: assign_stmt .

    $default  reduce using rule 46 (for_expr_1)


State 79

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 . SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 100


State 80

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   54 if_else_while_for_stmt: WHILE LPAREN expr . RPAREN statement

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63
    RPAREN     shift, and go to state 101


State 81

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   52 if_else_while_for_stmt: IF LPAREN expr . RPAREN statement
   53                       | IF LPAREN expr . RPAREN statement ELSE statement

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63
    RPAREN     shift, and go to state 102


State 82

   43 IO_stmt: PRINTF LPAREN STRING . COMMA expr RPAREN

    COMMA  shift, and go to state 103


State 83

   44 IO_stmt: SCANF LPAREN STRING . COMMA b_AND expr RPAREN

    COMMA  shift, and go to state 104


State 84

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   31     | expr EQ expr .

    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 31 (expr)


State 85

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   30     | expr NOT_EQ expr .
   31     | expr . EQ expr

    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 30 (expr)


State 86

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   27     | expr LESS_THAN expr .
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 27 (expr)


State 87

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   26     | expr LESS_EQ expr .
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 26 (expr)


State 88

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   29     | expr MORE_THAN expr .
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 29 (expr)


State 89

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   28     | expr MORE_EQ expr .
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 28 (expr)


State 90

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   23     | expr AND expr .
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 23 (expr)


State 91

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   24     | expr OR expr .
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 24 (expr)


State 92

   17 expr: expr . ADD expr
   17     | expr ADD expr .
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 17 (expr)


State 93

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   18     | expr SUB expr .
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 18 (expr)


State 94

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    $default  reduce using rule 19 (expr)


State 95

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    $default  reduce using rule 20 (expr)


State 96

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr

    $default  reduce using rule 21 (expr)


State 97

   34 decl_stmt: decl_stmt COMMA IDENTIFIER .
   35          | decl_stmt COMMA IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 105

    $default  reduce using rule 34 (decl_stmt)


State 98

   32 decl_stmt: Type IDENTIFIER ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 106


State 99

   10 statement: LBRACE fake_2 statements RBRACE .

    $default  reduce using rule 10 (statement)


State 100

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON . for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 49 (for_expr_2)

    expr        转到状态 107
    for_expr_2  转到状态 108


State 101

   54 if_else_while_for_stmt: WHILE LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 109
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 102

   52 if_else_while_for_stmt: IF LPAREN expr RPAREN . statement
   53                       | IF LPAREN expr RPAREN . statement ELSE statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 110
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 103

   43 IO_stmt: PRINTF LPAREN STRING COMMA . expr RPAREN

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 111


State 104

   44 IO_stmt: SCANF LPAREN STRING COMMA . b_AND expr RPAREN

    b_AND  shift, and go to state 112


State 105

   35 decl_stmt: decl_stmt COMMA IDENTIFIER ASSIGN . expr

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 113


State 106

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   32 decl_stmt: Type IDENTIFIER ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 32 (decl_stmt)


State 107

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   48 for_expr_2: expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 48 (for_expr_2)


State 108

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 . SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 114


State 109

   54 if_else_while_for_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 54 (if_else_while_for_stmt)


State 110

   52 if_else_while_for_stmt: IF LPAREN expr RPAREN statement .
   53                       | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 52 (if_else_while_for_stmt)]
    $default  reduce using rule 52 (if_else_while_for_stmt)


State 111

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   43 IO_stmt: PRINTF LPAREN STRING COMMA expr . RPAREN

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63
    RPAREN     shift, and go to state 116


State 112

   44 IO_stmt: SCANF LPAREN STRING COMMA b_AND . expr RPAREN

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 35
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    expr  转到状态 117


State 113

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   35 decl_stmt: decl_stmt COMMA IDENTIFIER ASSIGN expr .

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63

    $default  reduce using rule 35 (decl_stmt)


State 114

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON . for_expr_3 RPAREN statement

    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21

    $default  reduce using rule 51 (for_expr_3)

    expr         转到状态 29
    assign_stmt  转到状态 118
    for_expr_3   转到状态 119


State 115

   53 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 120
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 116

   43 IO_stmt: PRINTF LPAREN STRING COMMA expr RPAREN .

    $default  reduce using rule 43 (IO_stmt)


State 117

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | expr . LESS_EQ expr
   27     | expr . LESS_THAN expr
   28     | expr . MORE_EQ expr
   29     | expr . MORE_THAN expr
   30     | expr . NOT_EQ expr
   31     | expr . EQ expr
   44 IO_stmt: SCANF LPAREN STRING COMMA b_AND expr . RPAREN

    EQ         shift, and go to state 51
    NOT_EQ     shift, and go to state 52
    LESS_THAN  shift, and go to state 53
    LESS_EQ    shift, and go to state 54
    MORE_THAN  shift, and go to state 55
    MORE_EQ    shift, and go to state 56
    AND        shift, and go to state 57
    OR         shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63
    RPAREN     shift, and go to state 121


State 118

   50 for_expr_3: assign_stmt .

    $default  reduce using rule 50 (for_expr_3)


State 119

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 . RPAREN statement

    RPAREN  shift, and go to state 122


State 120

   53 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 53 (if_else_while_for_stmt)


State 121

   44 IO_stmt: SCANF LPAREN STRING COMMA b_AND expr RPAREN .

    $default  reduce using rule 44 (IO_stmt)


State 122

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    NOT         shift, and go to state 13
    SUB         shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    IDENTIFIER  shift, and go to state 17
    INTEGER     shift, and go to state 18
    CHAR        shift, and go to state 19
    BOOL        shift, and go to state 20
    STRING      shift, and go to state 21
    FOR         shift, and go to state 22
    WHILE       shift, and go to state 23
    IF          shift, and go to state 24
    PRINTF      shift, and go to state 25
    SCANF       shift, and go to state 26

    statement               转到状态 123
    expr                    转到状态 29
    decl_stmt               转到状态 30
    assign_stmt             转到状态 31
    IO_stmt                 转到状态 32
    if_else_while_for_stmt  转到状态 33
    Type                    转到状态 34


State 123

   55 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement .

    $default  reduce using rule 55 (if_else_while_for_stmt)
