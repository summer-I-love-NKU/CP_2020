Terminals unused in grammar

   T_STRING


状态 28 conflicts: 6 shift/reduce
状态 29 conflicts: 6 shift/reduce
状态 72 conflicts: 6 shift/reduce
状态 73 conflicts: 6 shift/reduce
状态 74 conflicts: 13 shift/reduce
状态 75 conflicts: 13 shift/reduce
状态 76 conflicts: 13 shift/reduce
状态 77 conflicts: 13 shift/reduce
状态 78 conflicts: 13 shift/reduce
状态 79 conflicts: 13 shift/reduce
状态 80 conflicts: 6 shift/reduce
状态 81 conflicts: 6 shift/reduce
状态 82 conflicts: 6 shift/reduce
状态 83 conflicts: 6 shift/reduce
状态 84 conflicts: 6 shift/reduce
状态 92 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | decl_stmt SEMICOLON
    6          | assign_stmt SEMICOLON
    7          | self_op_stmt SEMICOLON
    8          | IO_stmt SEMICOLON
    9          | if_else_while_stmt
   10          | LBRACE statements RBRACE

   11 expr: IDENTIFIER
   12     | INTEGER
   13     | CHAR
   14     | STRING
   15     | BOOL
   16     | expr ADD expr
   17     | expr SUB expr
   18     | expr MUL expr
   19     | expr DIV expr
   20     | expr MOD expr
   21     | SUB expr
   22     | expr AND expr
   23     | expr OR expr
   24     | NOT expr
   25     | expr LESS_EQ expr
   26     | expr LESS_THAN expr
   27     | expr MORE_EQ expr
   28     | expr MORE_THAN expr
   29     | expr NOT_EQ expr
   30     | expr EQ expr

   31 decl_stmt: Type IDENTIFIER ASSIGN expr
   32          | Type IDENTIFIER

   33 self_op_stmt: expr SELF_ADD
   34             | expr SELF_SUB

   35 assign_stmt: IDENTIFIER ASSIGN expr
   36            | IDENTIFIER ADD_ASSIGN expr
   37            | IDENTIFIER SUB_ASSIGN expr
   38            | IDENTIFIER MUL_ASSIGN expr
   39            | IDENTIFIER DIV_ASSIGN expr

   40 IO_stmt: PRINTF LPAREN expr RPAREN
   41        | SCANF LPAREN expr RPAREN

   42 if_else_while_stmt: IF LPAREN expr RPAREN statement
   43                   | IF LPAREN expr RPAREN statement ELSE statement
   44                   | WHILE LPAREN expr RPAREN statement

   45 Type: T_INT
   46     | T_CHAR
   47     | T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 45
T_CHAR (259) 46
T_STRING (260)
T_BOOL (261) 47
ASSIGN (262) 31 35
ADD_ASSIGN (263) 36
SUB_ASSIGN (264) 37
MUL_ASSIGN (265) 38
DIV_ASSIGN (266) 39
EQ (267) 30
NOT_EQ (268) 29
LESS_THAN (269) 26
LESS_EQ (270) 25
MORE_THAN (271) 28
MORE_EQ (272) 27
AND (273) 22
OR (274) 23
NOT (275) 24
ADD (276) 16
SUB (277) 17 21
MUL (278) 18
DIV (279) 19
MOD (280) 20
SELF_ADD (281) 33
SELF_SUB (282) 34
SEMICOLON (283) 4 5 6 7 8
LPAREN (284) 40 41 42 43 44
RPAREN (285) 40 41 42 43 44
LBRACE (286) 10
RBRACE (287) 10
IDENTIFIER (288) 11 31 32 35 36 37 38 39
INTEGER (289) 12
CHAR (290) 13
BOOL (291) 15
STRING (292) 14
WHILE (293) 44
IF (294) 42 43
ELSE (295) 43
PRINTF (296) 40
SCANF (297) 41
UMINUS (298)


Nonterminals, with rules where they appear

$accept (44)
    左： 0
program (45)
    左： 1, 右： 0
statements (46)
    左： 2 3, 右： 1 3 10
statement (47)
    左： 4 5 6 7 8 9 10, 右： 2 3 42 43 44
expr (48)
    左： 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30, 右： 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34
    35 36 37 38 39 40 41 42 43 44
decl_stmt (49)
    左： 31 32, 右： 5
self_op_stmt (50)
    左： 33 34, 右： 7
assign_stmt (51)
    左： 35 36 37 38 39, 右： 6
IO_stmt (52)
    左： 40 41, 右： 8
if_else_while_stmt (53)
    左： 42 43 44, 右： 9
Type (54)
    左： 45 46 47, 右： 31 32


State 0

    0 $accept: . program $end

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    program             转到状态 17
    statements          转到状态 18
    statement           转到状态 19
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 1

   45 Type: T_INT .

    $default  reduce using rule 45 (Type)


State 2

   46 Type: T_CHAR .

    $default  reduce using rule 46 (Type)


State 3

   47 Type: T_BOOL .

    $default  reduce using rule 47 (Type)


State 4

   24 expr: NOT . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 28


State 5

   21 expr: SUB . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 29


State 6

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 7

   10 statement: LBRACE . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    statements          转到状态 30
    statement           转到状态 19
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 8

   11 expr: IDENTIFIER .
   35 assign_stmt: IDENTIFIER . ASSIGN expr
   36            | IDENTIFIER . ADD_ASSIGN expr
   37            | IDENTIFIER . SUB_ASSIGN expr
   38            | IDENTIFIER . MUL_ASSIGN expr
   39            | IDENTIFIER . DIV_ASSIGN expr

    ASSIGN      shift, and go to state 31
    ADD_ASSIGN  shift, and go to state 32
    SUB_ASSIGN  shift, and go to state 33
    MUL_ASSIGN  shift, and go to state 34
    DIV_ASSIGN  shift, and go to state 35

    $default  reduce using rule 11 (expr)


State 9

   12 expr: INTEGER .

    $default  reduce using rule 12 (expr)


State 10

   13 expr: CHAR .

    $default  reduce using rule 13 (expr)


State 11

   15 expr: BOOL .

    $default  reduce using rule 15 (expr)


State 12

   14 expr: STRING .

    $default  reduce using rule 14 (expr)


State 13

   44 if_else_while_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 36


State 14

   42 if_else_while_stmt: IF . LPAREN expr RPAREN statement
   43                   | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 37


State 15

   40 IO_stmt: PRINTF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 38


State 16

   41 IO_stmt: SCANF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 39


State 17

    0 $accept: program . $end

    $end  shift, and go to state 40


State 18

    1 program: statements .
    3 statements: statements . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    $default  reduce using rule 1 (program)

    statement           转到状态 41
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 19

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 20

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   33 self_op_stmt: expr . SELF_ADD
   34             | expr . SELF_SUB

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54
    SELF_ADD   shift, and go to state 55
    SELF_SUB   shift, and go to state 56


State 21

    5 statement: decl_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 22

    7 statement: self_op_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 23

    6 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 24

    8 statement: IO_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 25

    9 statement: if_else_while_stmt .

    $default  reduce using rule 9 (statement)


State 26

   31 decl_stmt: Type . IDENTIFIER ASSIGN expr
   32          | Type . IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 27

   11 expr: IDENTIFIER .

    $default  reduce using rule 11 (expr)


State 28

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | NOT expr .
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    LESS_THAN  [reduce using rule 24 (expr)]
    LESS_EQ    [reduce using rule 24 (expr)]
    MORE_THAN  [reduce using rule 24 (expr)]
    MORE_EQ    [reduce using rule 24 (expr)]
    AND        [reduce using rule 24 (expr)]
    OR         [reduce using rule 24 (expr)]
    $default   reduce using rule 24 (expr)


State 29

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   21     | SUB expr .
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    LESS_THAN  [reduce using rule 21 (expr)]
    LESS_EQ    [reduce using rule 21 (expr)]
    MORE_THAN  [reduce using rule 21 (expr)]
    MORE_EQ    [reduce using rule 21 (expr)]
    AND        [reduce using rule 21 (expr)]
    OR         [reduce using rule 21 (expr)]
    $default   reduce using rule 21 (expr)


State 30

    3 statements: statements . statement
   10 statement: LBRACE statements . RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    RBRACE      shift, and go to state 62
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    statement           转到状态 41
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 31

   35 assign_stmt: IDENTIFIER ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 63


State 32

   36 assign_stmt: IDENTIFIER ADD_ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 64


State 33

   37 assign_stmt: IDENTIFIER SUB_ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 65


State 34

   38 assign_stmt: IDENTIFIER MUL_ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 66


State 35

   39 assign_stmt: IDENTIFIER DIV_ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 67


State 36

   44 if_else_while_stmt: WHILE LPAREN . expr RPAREN statement

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 68


State 37

   42 if_else_while_stmt: IF LPAREN . expr RPAREN statement
   43                   | IF LPAREN . expr RPAREN statement ELSE statement

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 69


State 38

   40 IO_stmt: PRINTF LPAREN . expr RPAREN

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 70


State 39

   41 IO_stmt: SCANF LPAREN . expr RPAREN

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 71


State 40

    0 $accept: program $end .

    $default  接受


State 41

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 42

   30 expr: expr EQ . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 72


State 43

   29 expr: expr NOT_EQ . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 73


State 44

   26 expr: expr LESS_THAN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 74


State 45

   25 expr: expr LESS_EQ . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 75


State 46

   28 expr: expr MORE_THAN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 76


State 47

   27 expr: expr MORE_EQ . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 77


State 48

   22 expr: expr AND . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 78


State 49

   23 expr: expr OR . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 79


State 50

   16 expr: expr ADD . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 80


State 51

   17 expr: expr SUB . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 81


State 52

   18 expr: expr MUL . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 82


State 53

   19 expr: expr DIV . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 83


State 54

   20 expr: expr MOD . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 84


State 55

   33 self_op_stmt: expr SELF_ADD .

    $default  reduce using rule 33 (self_op_stmt)


State 56

   34 self_op_stmt: expr SELF_SUB .

    $default  reduce using rule 34 (self_op_stmt)


State 57

    5 statement: decl_stmt SEMICOLON .

    $default  reduce using rule 5 (statement)


State 58

    7 statement: self_op_stmt SEMICOLON .

    $default  reduce using rule 7 (statement)


State 59

    6 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 6 (statement)


State 60

    8 statement: IO_stmt SEMICOLON .

    $default  reduce using rule 8 (statement)


State 61

   31 decl_stmt: Type IDENTIFIER . ASSIGN expr
   32          | Type IDENTIFIER .

    ASSIGN  shift, and go to state 85

    $default  reduce using rule 32 (decl_stmt)


State 62

   10 statement: LBRACE statements RBRACE .

    $default  reduce using rule 10 (statement)


State 63

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   35 assign_stmt: IDENTIFIER ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 35 (assign_stmt)


State 64

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   36 assign_stmt: IDENTIFIER ADD_ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 36 (assign_stmt)


State 65

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   37 assign_stmt: IDENTIFIER SUB_ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 37 (assign_stmt)


State 66

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   38 assign_stmt: IDENTIFIER MUL_ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 38 (assign_stmt)


State 67

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   39 assign_stmt: IDENTIFIER DIV_ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 39 (assign_stmt)


State 68

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   44 if_else_while_stmt: WHILE LPAREN expr . RPAREN statement

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54
    RPAREN     shift, and go to state 86


State 69

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   42 if_else_while_stmt: IF LPAREN expr . RPAREN statement
   43                   | IF LPAREN expr . RPAREN statement ELSE statement

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54
    RPAREN     shift, and go to state 87


State 70

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   40 IO_stmt: PRINTF LPAREN expr . RPAREN

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54
    RPAREN     shift, and go to state 88


State 71

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   41 IO_stmt: SCANF LPAREN expr . RPAREN

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54
    RPAREN     shift, and go to state 89


State 72

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   30     | expr EQ expr .

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    LESS_THAN  [reduce using rule 30 (expr)]
    LESS_EQ    [reduce using rule 30 (expr)]
    MORE_THAN  [reduce using rule 30 (expr)]
    MORE_EQ    [reduce using rule 30 (expr)]
    AND        [reduce using rule 30 (expr)]
    OR         [reduce using rule 30 (expr)]
    $default   reduce using rule 30 (expr)


State 73

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   29     | expr NOT_EQ expr .
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    LESS_THAN  [reduce using rule 29 (expr)]
    LESS_EQ    [reduce using rule 29 (expr)]
    MORE_THAN  [reduce using rule 29 (expr)]
    MORE_EQ    [reduce using rule 29 (expr)]
    AND        [reduce using rule 29 (expr)]
    OR         [reduce using rule 29 (expr)]
    $default   reduce using rule 29 (expr)


State 74

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   26     | expr LESS_THAN expr .
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 26 (expr)]
    NOT_EQ     [reduce using rule 26 (expr)]
    LESS_THAN  [reduce using rule 26 (expr)]
    LESS_EQ    [reduce using rule 26 (expr)]
    MORE_THAN  [reduce using rule 26 (expr)]
    MORE_EQ    [reduce using rule 26 (expr)]
    AND        [reduce using rule 26 (expr)]
    OR         [reduce using rule 26 (expr)]
    ADD        [reduce using rule 26 (expr)]
    SUB        [reduce using rule 26 (expr)]
    MUL        [reduce using rule 26 (expr)]
    DIV        [reduce using rule 26 (expr)]
    MOD        [reduce using rule 26 (expr)]
    $default   reduce using rule 26 (expr)


State 75

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   25     | expr LESS_EQ expr .
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 25 (expr)]
    NOT_EQ     [reduce using rule 25 (expr)]
    LESS_THAN  [reduce using rule 25 (expr)]
    LESS_EQ    [reduce using rule 25 (expr)]
    MORE_THAN  [reduce using rule 25 (expr)]
    MORE_EQ    [reduce using rule 25 (expr)]
    AND        [reduce using rule 25 (expr)]
    OR         [reduce using rule 25 (expr)]
    ADD        [reduce using rule 25 (expr)]
    SUB        [reduce using rule 25 (expr)]
    MUL        [reduce using rule 25 (expr)]
    DIV        [reduce using rule 25 (expr)]
    MOD        [reduce using rule 25 (expr)]
    $default   reduce using rule 25 (expr)


State 76

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   28     | expr MORE_THAN expr .
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 28 (expr)]
    NOT_EQ     [reduce using rule 28 (expr)]
    LESS_THAN  [reduce using rule 28 (expr)]
    LESS_EQ    [reduce using rule 28 (expr)]
    MORE_THAN  [reduce using rule 28 (expr)]
    MORE_EQ    [reduce using rule 28 (expr)]
    AND        [reduce using rule 28 (expr)]
    OR         [reduce using rule 28 (expr)]
    ADD        [reduce using rule 28 (expr)]
    SUB        [reduce using rule 28 (expr)]
    MUL        [reduce using rule 28 (expr)]
    DIV        [reduce using rule 28 (expr)]
    MOD        [reduce using rule 28 (expr)]
    $default   reduce using rule 28 (expr)


State 77

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   27     | expr MORE_EQ expr .
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 27 (expr)]
    NOT_EQ     [reduce using rule 27 (expr)]
    LESS_THAN  [reduce using rule 27 (expr)]
    LESS_EQ    [reduce using rule 27 (expr)]
    MORE_THAN  [reduce using rule 27 (expr)]
    MORE_EQ    [reduce using rule 27 (expr)]
    AND        [reduce using rule 27 (expr)]
    OR         [reduce using rule 27 (expr)]
    ADD        [reduce using rule 27 (expr)]
    SUB        [reduce using rule 27 (expr)]
    MUL        [reduce using rule 27 (expr)]
    DIV        [reduce using rule 27 (expr)]
    MOD        [reduce using rule 27 (expr)]
    $default   reduce using rule 27 (expr)


State 78

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   22     | expr AND expr .
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 22 (expr)]
    NOT_EQ     [reduce using rule 22 (expr)]
    LESS_THAN  [reduce using rule 22 (expr)]
    LESS_EQ    [reduce using rule 22 (expr)]
    MORE_THAN  [reduce using rule 22 (expr)]
    MORE_EQ    [reduce using rule 22 (expr)]
    AND        [reduce using rule 22 (expr)]
    OR         [reduce using rule 22 (expr)]
    ADD        [reduce using rule 22 (expr)]
    SUB        [reduce using rule 22 (expr)]
    MUL        [reduce using rule 22 (expr)]
    DIV        [reduce using rule 22 (expr)]
    MOD        [reduce using rule 22 (expr)]
    $default   reduce using rule 22 (expr)


State 79

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   23     | expr OR expr .
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    EQ         [reduce using rule 23 (expr)]
    NOT_EQ     [reduce using rule 23 (expr)]
    LESS_THAN  [reduce using rule 23 (expr)]
    LESS_EQ    [reduce using rule 23 (expr)]
    MORE_THAN  [reduce using rule 23 (expr)]
    MORE_EQ    [reduce using rule 23 (expr)]
    AND        [reduce using rule 23 (expr)]
    OR         [reduce using rule 23 (expr)]
    ADD        [reduce using rule 23 (expr)]
    SUB        [reduce using rule 23 (expr)]
    MUL        [reduce using rule 23 (expr)]
    DIV        [reduce using rule 23 (expr)]
    MOD        [reduce using rule 23 (expr)]
    $default   reduce using rule 23 (expr)


State 80

   16 expr: expr . ADD expr
   16     | expr ADD expr .
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    LESS_THAN  [reduce using rule 16 (expr)]
    LESS_EQ    [reduce using rule 16 (expr)]
    MORE_THAN  [reduce using rule 16 (expr)]
    MORE_EQ    [reduce using rule 16 (expr)]
    AND        [reduce using rule 16 (expr)]
    OR         [reduce using rule 16 (expr)]
    $default   reduce using rule 16 (expr)


State 81

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   17     | expr SUB expr .
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    LESS_THAN  [reduce using rule 17 (expr)]
    LESS_EQ    [reduce using rule 17 (expr)]
    MORE_THAN  [reduce using rule 17 (expr)]
    MORE_EQ    [reduce using rule 17 (expr)]
    AND        [reduce using rule 17 (expr)]
    OR         [reduce using rule 17 (expr)]
    $default   reduce using rule 17 (expr)


State 82

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   18     | expr MUL expr .
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    LESS_THAN  [reduce using rule 18 (expr)]
    LESS_EQ    [reduce using rule 18 (expr)]
    MORE_THAN  [reduce using rule 18 (expr)]
    MORE_EQ    [reduce using rule 18 (expr)]
    AND        [reduce using rule 18 (expr)]
    OR         [reduce using rule 18 (expr)]
    $default   reduce using rule 18 (expr)


State 83

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   19     | expr DIV expr .
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    LESS_THAN  [reduce using rule 19 (expr)]
    LESS_EQ    [reduce using rule 19 (expr)]
    MORE_THAN  [reduce using rule 19 (expr)]
    MORE_EQ    [reduce using rule 19 (expr)]
    AND        [reduce using rule 19 (expr)]
    OR         [reduce using rule 19 (expr)]
    $default   reduce using rule 19 (expr)


State 84

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   20     | expr MOD expr .
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr

    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    LESS_THAN  [reduce using rule 20 (expr)]
    LESS_EQ    [reduce using rule 20 (expr)]
    MORE_THAN  [reduce using rule 20 (expr)]
    MORE_EQ    [reduce using rule 20 (expr)]
    AND        [reduce using rule 20 (expr)]
    OR         [reduce using rule 20 (expr)]
    $default   reduce using rule 20 (expr)


State 85

   31 decl_stmt: Type IDENTIFIER ASSIGN . expr

    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 27
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  转到状态 90


State 86

   44 if_else_while_stmt: WHILE LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    statement           转到状态 91
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 87

   42 if_else_while_stmt: IF LPAREN expr RPAREN . statement
   43                   | IF LPAREN expr RPAREN . statement ELSE statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    statement           转到状态 92
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 88

   40 IO_stmt: PRINTF LPAREN expr RPAREN .

    $default  reduce using rule 40 (IO_stmt)


State 89

   41 IO_stmt: SCANF LPAREN expr RPAREN .

    $default  reduce using rule 41 (IO_stmt)


State 90

   16 expr: expr . ADD expr
   17     | expr . SUB expr
   18     | expr . MUL expr
   19     | expr . DIV expr
   20     | expr . MOD expr
   22     | expr . AND expr
   23     | expr . OR expr
   25     | expr . LESS_EQ expr
   26     | expr . LESS_THAN expr
   27     | expr . MORE_EQ expr
   28     | expr . MORE_THAN expr
   29     | expr . NOT_EQ expr
   30     | expr . EQ expr
   31 decl_stmt: Type IDENTIFIER ASSIGN expr .

    EQ         shift, and go to state 42
    NOT_EQ     shift, and go to state 43
    LESS_THAN  shift, and go to state 44
    LESS_EQ    shift, and go to state 45
    MORE_THAN  shift, and go to state 46
    MORE_EQ    shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49
    ADD        shift, and go to state 50
    SUB        shift, and go to state 51
    MUL        shift, and go to state 52
    DIV        shift, and go to state 53
    MOD        shift, and go to state 54

    $default  reduce using rule 31 (decl_stmt)


State 91

   44 if_else_while_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 44 (if_else_while_stmt)


State 92

   42 if_else_while_stmt: IF LPAREN expr RPAREN statement .
   43                   | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 93

    ELSE      [reduce using rule 42 (if_else_while_stmt)]
    $default  reduce using rule 42 (if_else_while_stmt)


State 93

   43 if_else_while_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    NOT         shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LBRACE      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    INTEGER     shift, and go to state 9
    CHAR        shift, and go to state 10
    BOOL        shift, and go to state 11
    STRING      shift, and go to state 12
    WHILE       shift, and go to state 13
    IF          shift, and go to state 14
    PRINTF      shift, and go to state 15
    SCANF       shift, and go to state 16

    statement           转到状态 94
    expr                转到状态 20
    decl_stmt           转到状态 21
    self_op_stmt        转到状态 22
    assign_stmt         转到状态 23
    IO_stmt             转到状态 24
    if_else_while_stmt  转到状态 25
    Type                转到状态 26


State 94

   43 if_else_while_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 43 (if_else_while_stmt)
