.rodata

.data--
.bss--

.text

函数：
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	leal	4(%esp), %ecx
	andl	$-16, %esp
	pushl	-4(%ecx)
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ecx
	subl	$4, %esp
	subl	$12, %esp
	pushl	$.LC0
	call	puts
	addl	$16, %esp
	movl	$0, %eax
	movl	-4(%ebp), %ecx
	leave
	leal	-4(%ecx), %esp
	ret
.LFE0:
	.size	main, .-main



规范结点类型，在语法分析都定义好





#-o  -c  -E(preprocess)  -S (asm)
# g++ -S test.cpp -o test.S
# g++ test.S -o test
# 运行命令
# gcc -v
# 显示：
# Target: x86_64-linux-gnu
# 所以，我这里的gcc默认生成64位的程序。
# 如果想编出32位的程序，就要加 -m32选项


	# gcc -m32 -S test.c -o test.S
	# gcc -m32 test.S -o test

	# gcc -m32 -c -g -Wa,-adlhn test.c > test.comment1.S
	# gcc -m32 -S -fverbose-asm test.c -o test.comment2.S
	# ./test

	
	#使用 -i 代表直接对文件操作 很危险！！！
	#http://blog.itpub.net/31559985/viewspace-2717485/ 
	#https://www.runoob.com/linux/linux-comm-sed.html  sed命令！！！
	# sed '/^header/d' test.txt  删除特定字符开头的行  : ^ 开头  $ 结尾
	# sed '/System\|Linux/d' sed-demo.txt  
# 	sed 还支持删除文件的空白行，命令如下：
# sed '/^$/d' sed-demo.txt
# sed '1d' sed-demo.txt
# sed '$d' sed-demo.txt
# sed '5,7d' sed-demo.txt