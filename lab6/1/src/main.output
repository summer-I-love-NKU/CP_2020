Terminals unused in grammar

   DOT
   ELSE_IF
   b_OR
   b_NOR
   b_NOT
   pre_SELF_ADD
   pre_SELF_SUB


状态 0 conflicts: 6 shift/reduce
状态 164 conflicts: 1 shift/reduce


语法

    0 $accept: CompUnit $end

    1 CompUnit: %empty
    2         | CompUnit Func_Def
    3         | CompUnit Decl
    4         | Func_Def
    5         | Decl

    6 Decl: decl_stmt SEMICOLON

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    8 fake_1: %empty

    9 statements: statement
   10           | statements statement

   11 statement: SEMICOLON
   12          | decl_stmt SEMICOLON
   13          | assign_stmt SEMICOLON
   14          | IO_stmt SEMICOLON
   15          | if_else_while_for_stmt
   16          | RETURN INT_CONST SEMICOLON
   17          | LBRACE fake_2 statements RBRACE

   18 fake_2: %empty

   19 expr: ID
   20     | INT_CONST
   21     | CHAR
   22     | STRING
   23     | BOOL
   24     | LPAREN expr RPAREN
   25     | expr ADD expr
   26     | expr SUB expr
   27     | expr MUL expr
   28     | expr DIV expr
   29     | expr MOD expr
   30     | SUB expr
   31     | expr AND expr
   32     | expr OR expr
   33     | NOT expr
   34     | expr LESS_EQ expr
   35     | expr LESS_THAN expr
   36     | expr MORE_EQ expr
   37     | expr MORE_THAN expr
   38     | expr NOT_EQ expr
   39     | expr EQ expr

   40 decl_stmt: Type ID ASSIGN expr
   41          | Type ID
   42          | decl_stmt COMMA ID ASSIGN expr
   43          | decl_stmt COMMA ID
   44          | Type MUL ID ASSIGN b_AND expr
   45          | Type MUL ID
   46          | Type b_AND ID ASSIGN ID
   47          | Type ARRAY ASSIGN arr_assign_expr
   48          | Type ARRAY

   49 assign_stmt: base_assign_stmt
   50            | ID ADD_ASSIGN expr
   51            | ID SUB_ASSIGN expr
   52            | ID MUL_ASSIGN expr
   53            | ID DIV_ASSIGN expr
   54            | expr SELF_ADD
   55            | expr SELF_SUB

   56 base_assign_stmt: ID ASSIGN expr
   57                 | ID ASSIGN base_assign_stmt

   58 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN
   59        | PRINTF LPAREN STRING RPAREN
   60        | SCANF LPAREN STRING COMMA I_expr RPAREN

   61 O_expr: expr
   62       | O_expr COMMA expr

   63 I_expr: b_AND expr
   64       | I_expr COMMA b_AND expr

   65 if_else_while_for_stmt: IF LPAREN expr RPAREN statement
   66                       | IF LPAREN expr RPAREN statement ELSE statement
   67                       | WHILE LPAREN expr RPAREN statement
   68                       | FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

   69 for_expr_1: decl_stmt
   70           | assign_stmt
   71           | %empty

   72 for_expr_2: expr
   73           | %empty

   74 for_expr_3: assign_stmt
   75           | %empty

   76 Type: T_INT
   77     | T_CHAR
   78     | T_BOOL
   79     | T_STRING
   80     | T_VOID
   81     | CONST T_INT
   82     | CONST T_CHAR

   83 INT_CONST: INTEGER_H
   84          | INTEGER_D
   85          | INTEGER_O
   86          | INTEGER_B

   87 ARRAY: IDENTIFIER LMPAREN INTEGER_D RMPAREN
   88      | ARRAY LMPAREN INTEGER_D RMPAREN

   89 arr_assign_expr: LBRACE arr_element RBRACE

   90 arr_element: arr_ele
   91            | arr_element COMMA arr_ele

   92 arr_ele: INT_CONST
   93        | CHAR
   94        | STRING

   95 ID: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 76 81
T_CHAR (259) 77 82
T_BOOL (260) 78
T_STRING (261) 79
T_VOID (262) 80
CONST (263) 81 82
ASSIGN (264) 40 42 44 46 47 56 57
ADD_ASSIGN (265) 50
SUB_ASSIGN (266) 51
MUL_ASSIGN (267) 52
DIV_ASSIGN (268) 53
EQ (269) 39
NOT_EQ (270) 38
LESS_THAN (271) 35
LESS_EQ (272) 34
MORE_THAN (273) 37
MORE_EQ (274) 36
AND (275) 31
OR (276) 32
NOT (277) 33
ADD (278) 25
SUB (279) 26 30
MUL (280) 27 44 45
DIV (281) 28
MOD (282) 29
SELF_ADD (283) 54
SELF_SUB (284) 55
SEMICOLON (285) 6 11 12 13 14 16 68
COMMA (286) 42 43 58 60 62 64 91
DOT (287)
LPAREN (288) 7 24 58 59 60 65 66 67 68
RPAREN (289) 7 24 58 59 60 65 66 67 68
LBRACE (290) 7 17 89
RBRACE (291) 7 17 89
LMPAREN (292) 87 88
RMPAREN (293) 87 88
IDENTIFIER (294) 87 95
INTEGER_H (295) 83
INTEGER_D (296) 84 87 88
INTEGER_O (297) 85
INTEGER_B (298) 86
CHAR (299) 21 93
BOOL (300) 23
STRING (301) 22 58 59 60 94
MAIN (302) 7
RETURN (303) 16
FOR (304) 68
WHILE (305) 67
IF (306) 65 66
ELSE (307) 66
ELSE_IF (308)
PRINTF (309) 58 59
SCANF (310) 60
b_OR (311)
b_NOR (312)
b_AND (313) 44 46 63 64
UMINUS (314)
b_NOT (315)
pre_SELF_ADD (316)
pre_SELF_SUB (317)
GET_ADDRESS (318)
POINTER (319)


Nonterminals, with rules where they appear

$accept (65)
    左： 0
CompUnit (66)
    左： 1 2 3 4 5, 右： 0 2 3
Decl (67)
    左： 6, 右： 3 5
Func_Def (68)
    左： 7, 右： 2 4
fake_1 (69)
    左： 8, 右： 7
statements (70)
    左： 9 10, 右： 7 10 17
statement (71)
    左： 11 12 13 14 15 16 17, 右： 9 10 65 66 67 68
fake_2 (72)
    左： 18, 右： 17
expr (73)
    左： 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39, 右： 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    42 44 50 51 52 53 54 55 56 61 62 63 64 65 66 67 72
decl_stmt (74)
    左： 40 41 42 43 44 45 46 47 48, 右： 6 12 42 43 69
assign_stmt (75)
    左： 49 50 51 52 53 54 55, 右： 13 70 74
base_assign_stmt (76)
    左： 56 57, 右： 49 57
IO_stmt (77)
    左： 58 59 60, 右： 14
O_expr (78)
    左： 61 62, 右： 58 62
I_expr (79)
    左： 63 64, 右： 60 64
if_else_while_for_stmt (80)
    左： 65 66 67 68, 右： 15
for_expr_1 (81)
    左： 69 70 71, 右： 68
for_expr_2 (82)
    左： 72 73, 右： 68
for_expr_3 (83)
    左： 74 75, 右： 68
Type (84)
    左： 76 77 78 79 80 81 82, 右： 7 40 41 44 45 46 47 48
INT_CONST (85)
    左： 83 84 85 86, 右： 16 20 92
ARRAY (86)
    左： 87 88, 右： 47 48 88
arr_assign_expr (87)
    左： 89, 右： 47
arr_element (88)
    左： 90 91, 右： 89 91
arr_ele (89)
    左： 92 93 94, 右： 90 91
ID (90)
    左： 95, 右： 19 40 41 42 43 44 45 46 50 51 52 53 56 57


State 0

    0 $accept: . CompUnit $end

    T_INT     shift, and go to state 1
    T_CHAR    shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_STRING  shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    T_INT     [reduce using rule 1 (CompUnit)]
    T_CHAR    [reduce using rule 1 (CompUnit)]
    T_BOOL    [reduce using rule 1 (CompUnit)]
    T_STRING  [reduce using rule 1 (CompUnit)]
    T_VOID    [reduce using rule 1 (CompUnit)]
    CONST     [reduce using rule 1 (CompUnit)]
    $default  reduce using rule 1 (CompUnit)

    CompUnit   转到状态 7
    Decl       转到状态 8
    Func_Def   转到状态 9
    decl_stmt  转到状态 10
    Type       转到状态 11


State 1

   76 Type: T_INT .

    $default  reduce using rule 76 (Type)


State 2

   77 Type: T_CHAR .

    $default  reduce using rule 77 (Type)


State 3

   78 Type: T_BOOL .

    $default  reduce using rule 78 (Type)


State 4

   79 Type: T_STRING .

    $default  reduce using rule 79 (Type)


State 5

   80 Type: T_VOID .

    $default  reduce using rule 80 (Type)


State 6

   81 Type: CONST . T_INT
   82     | CONST . T_CHAR

    T_INT   shift, and go to state 12
    T_CHAR  shift, and go to state 13


State 7

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . Func_Def
    3         | CompUnit . Decl

    $end      shift, and go to state 14
    T_INT     shift, and go to state 1
    T_CHAR    shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_STRING  shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    Decl       转到状态 15
    Func_Def   转到状态 16
    decl_stmt  转到状态 10
    Type       转到状态 11


State 8

    5 CompUnit: Decl .

    $default  reduce using rule 5 (CompUnit)


State 9

    4 CompUnit: Func_Def .

    $default  reduce using rule 4 (CompUnit)


State 10

    6 Decl: decl_stmt . SEMICOLON
   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID

    SEMICOLON  shift, and go to state 17
    COMMA      shift, and go to state 18


State 11

    7 Func_Def: Type . MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE
   40 decl_stmt: Type . ID ASSIGN expr
   41          | Type . ID
   44          | Type . MUL ID ASSIGN b_AND expr
   45          | Type . MUL ID
   46          | Type . b_AND ID ASSIGN ID
   47          | Type . ARRAY ASSIGN arr_assign_expr
   48          | Type . ARRAY

    MUL         shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    MAIN        shift, and go to state 21
    b_AND       shift, and go to state 22

    ARRAY  转到状态 23
    ID     转到状态 24


State 12

   81 Type: CONST T_INT .

    $default  reduce using rule 81 (Type)


State 13

   82 Type: CONST T_CHAR .

    $default  reduce using rule 82 (Type)


State 14

    0 $accept: CompUnit $end .

    $default  接受


State 15

    3 CompUnit: CompUnit Decl .

    $default  reduce using rule 3 (CompUnit)


State 16

    2 CompUnit: CompUnit Func_Def .

    $default  reduce using rule 2 (CompUnit)


State 17

    6 Decl: decl_stmt SEMICOLON .

    $default  reduce using rule 6 (Decl)


State 18

   42 decl_stmt: decl_stmt COMMA . ID ASSIGN expr
   43          | decl_stmt COMMA . ID

    IDENTIFIER  shift, and go to state 25

    ID  转到状态 26


State 19

   44 decl_stmt: Type MUL . ID ASSIGN b_AND expr
   45          | Type MUL . ID

    IDENTIFIER  shift, and go to state 25

    ID  转到状态 27


State 20

   87 ARRAY: IDENTIFIER . LMPAREN INTEGER_D RMPAREN
   95 ID: IDENTIFIER .

    LMPAREN  shift, and go to state 28

    $default  reduce using rule 95 (ID)


State 21

    7 Func_Def: Type MAIN . LPAREN RPAREN LBRACE fake_1 statements RBRACE

    LPAREN  shift, and go to state 29


State 22

   46 decl_stmt: Type b_AND . ID ASSIGN ID

    IDENTIFIER  shift, and go to state 25

    ID  转到状态 30


State 23

   47 decl_stmt: Type ARRAY . ASSIGN arr_assign_expr
   48          | Type ARRAY .
   88 ARRAY: ARRAY . LMPAREN INTEGER_D RMPAREN

    ASSIGN   shift, and go to state 31
    LMPAREN  shift, and go to state 32

    $default  reduce using rule 48 (decl_stmt)


State 24

   40 decl_stmt: Type ID . ASSIGN expr
   41          | Type ID .

    ASSIGN  shift, and go to state 33

    $default  reduce using rule 41 (decl_stmt)


State 25

   95 ID: IDENTIFIER .

    $default  reduce using rule 95 (ID)


State 26

   42 decl_stmt: decl_stmt COMMA ID . ASSIGN expr
   43          | decl_stmt COMMA ID .

    ASSIGN  shift, and go to state 34

    $default  reduce using rule 43 (decl_stmt)


State 27

   44 decl_stmt: Type MUL ID . ASSIGN b_AND expr
   45          | Type MUL ID .

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 45 (decl_stmt)


State 28

   87 ARRAY: IDENTIFIER LMPAREN . INTEGER_D RMPAREN

    INTEGER_D  shift, and go to state 36


State 29

    7 Func_Def: Type MAIN LPAREN . RPAREN LBRACE fake_1 statements RBRACE

    RPAREN  shift, and go to state 37


State 30

   46 decl_stmt: Type b_AND ID . ASSIGN ID

    ASSIGN  shift, and go to state 38


State 31

   47 decl_stmt: Type ARRAY ASSIGN . arr_assign_expr

    LBRACE  shift, and go to state 39

    arr_assign_expr  转到状态 40


State 32

   88 ARRAY: ARRAY LMPAREN . INTEGER_D RMPAREN

    INTEGER_D  shift, and go to state 41


State 33

   40 decl_stmt: Type ID ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 52
    INT_CONST  转到状态 53
    ID         转到状态 54


State 34

   42 decl_stmt: decl_stmt COMMA ID ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 55
    INT_CONST  转到状态 53
    ID         转到状态 54


State 35

   44 decl_stmt: Type MUL ID ASSIGN . b_AND expr

    b_AND  shift, and go to state 56


State 36

   87 ARRAY: IDENTIFIER LMPAREN INTEGER_D . RMPAREN

    RMPAREN  shift, and go to state 57


State 37

    7 Func_Def: Type MAIN LPAREN RPAREN . LBRACE fake_1 statements RBRACE

    LBRACE  shift, and go to state 58


State 38

   46 decl_stmt: Type b_AND ID ASSIGN . ID

    IDENTIFIER  shift, and go to state 25

    ID  转到状态 59


State 39

   89 arr_assign_expr: LBRACE . arr_element RBRACE

    INTEGER_H  shift, and go to state 45
    INTEGER_D  shift, and go to state 46
    INTEGER_O  shift, and go to state 47
    INTEGER_B  shift, and go to state 48
    CHAR       shift, and go to state 60
    STRING     shift, and go to state 61

    INT_CONST    转到状态 62
    arr_element  转到状态 63
    arr_ele      转到状态 64


State 40

   47 decl_stmt: Type ARRAY ASSIGN arr_assign_expr .

    $default  reduce using rule 47 (decl_stmt)


State 41

   88 ARRAY: ARRAY LMPAREN INTEGER_D . RMPAREN

    RMPAREN  shift, and go to state 65


State 42

   33 expr: NOT . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 66
    INT_CONST  转到状态 53
    ID         转到状态 54


State 43

   30 expr: SUB . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 67
    INT_CONST  转到状态 53
    ID         转到状态 54


State 44

   24 expr: LPAREN . expr RPAREN

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 68
    INT_CONST  转到状态 53
    ID         转到状态 54


State 45

   83 INT_CONST: INTEGER_H .

    $default  reduce using rule 83 (INT_CONST)


State 46

   84 INT_CONST: INTEGER_D .

    $default  reduce using rule 84 (INT_CONST)


State 47

   85 INT_CONST: INTEGER_O .

    $default  reduce using rule 85 (INT_CONST)


State 48

   86 INT_CONST: INTEGER_B .

    $default  reduce using rule 86 (INT_CONST)


State 49

   21 expr: CHAR .

    $default  reduce using rule 21 (expr)


State 50

   23 expr: BOOL .

    $default  reduce using rule 23 (expr)


State 51

   22 expr: STRING .

    $default  reduce using rule 22 (expr)


State 52

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   40 decl_stmt: Type ID ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 40 (decl_stmt)


State 53

   20 expr: INT_CONST .

    $default  reduce using rule 20 (expr)


State 54

   19 expr: ID .

    $default  reduce using rule 19 (expr)


State 55

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   42 decl_stmt: decl_stmt COMMA ID ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 42 (decl_stmt)


State 56

   44 decl_stmt: Type MUL ID ASSIGN b_AND . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 82
    INT_CONST  转到状态 53
    ID         转到状态 54


State 57

   87 ARRAY: IDENTIFIER LMPAREN INTEGER_D RMPAREN .

    $default  reduce using rule 87 (ARRAY)


State 58

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE . fake_1 statements RBRACE

    $default  reduce using rule 8 (fake_1)

    fake_1  转到状态 83


State 59

   46 decl_stmt: Type b_AND ID ASSIGN ID .

    $default  reduce using rule 46 (decl_stmt)


State 60

   93 arr_ele: CHAR .

    $default  reduce using rule 93 (arr_ele)


State 61

   94 arr_ele: STRING .

    $default  reduce using rule 94 (arr_ele)


State 62

   92 arr_ele: INT_CONST .

    $default  reduce using rule 92 (arr_ele)


State 63

   89 arr_assign_expr: LBRACE arr_element . RBRACE
   91 arr_element: arr_element . COMMA arr_ele

    COMMA   shift, and go to state 84
    RBRACE  shift, and go to state 85


State 64

   90 arr_element: arr_ele .

    $default  reduce using rule 90 (arr_element)


State 65

   88 ARRAY: ARRAY LMPAREN INTEGER_D RMPAREN .

    $default  reduce using rule 88 (ARRAY)


State 66

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   33     | NOT expr .
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 33 (expr)


State 67

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   30     | SUB expr .
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 30 (expr)


State 68

   24 expr: LPAREN expr . RPAREN
   25     | expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81
    RPAREN     shift, and go to state 86


State 69

   39 expr: expr EQ . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 87
    INT_CONST  转到状态 53
    ID         转到状态 54


State 70

   38 expr: expr NOT_EQ . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 88
    INT_CONST  转到状态 53
    ID         转到状态 54


State 71

   35 expr: expr LESS_THAN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 89
    INT_CONST  转到状态 53
    ID         转到状态 54


State 72

   34 expr: expr LESS_EQ . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 90
    INT_CONST  转到状态 53
    ID         转到状态 54


State 73

   37 expr: expr MORE_THAN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 91
    INT_CONST  转到状态 53
    ID         转到状态 54


State 74

   36 expr: expr MORE_EQ . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 92
    INT_CONST  转到状态 53
    ID         转到状态 54


State 75

   31 expr: expr AND . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 93
    INT_CONST  转到状态 53
    ID         转到状态 54


State 76

   32 expr: expr OR . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 94
    INT_CONST  转到状态 53
    ID         转到状态 54


State 77

   25 expr: expr ADD . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 95
    INT_CONST  转到状态 53
    ID         转到状态 54


State 78

   26 expr: expr SUB . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 96
    INT_CONST  转到状态 53
    ID         转到状态 54


State 79

   27 expr: expr MUL . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 97
    INT_CONST  转到状态 53
    ID         转到状态 54


State 80

   28 expr: expr DIV . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 98
    INT_CONST  转到状态 53
    ID         转到状态 54


State 81

   29 expr: expr MOD . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 99
    INT_CONST  转到状态 53
    ID         转到状态 54


State 82

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   44 decl_stmt: Type MUL ID ASSIGN b_AND expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 44 (decl_stmt)


State 83

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statements              转到状态 108
    statement               转到状态 109
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 84

   91 arr_element: arr_element COMMA . arr_ele

    INTEGER_H  shift, and go to state 45
    INTEGER_D  shift, and go to state 46
    INTEGER_O  shift, and go to state 47
    INTEGER_B  shift, and go to state 48
    CHAR       shift, and go to state 60
    STRING     shift, and go to state 61

    INT_CONST  转到状态 62
    arr_ele    转到状态 118


State 85

   89 arr_assign_expr: LBRACE arr_element RBRACE .

    $default  reduce using rule 89 (arr_assign_expr)


State 86

   24 expr: LPAREN expr RPAREN .

    $default  reduce using rule 24 (expr)


State 87

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   39     | expr EQ expr .

    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 39 (expr)


State 88

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   38     | expr NOT_EQ expr .
   39     | expr . EQ expr

    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 38 (expr)


State 89

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   35     | expr LESS_THAN expr .
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 35 (expr)


State 90

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   34     | expr LESS_EQ expr .
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 34 (expr)


State 91

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   37     | expr MORE_THAN expr .
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 37 (expr)


State 92

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   36     | expr MORE_EQ expr .
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78
    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 36 (expr)


State 93

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   31     | expr AND expr .
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 31 (expr)


State 94

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   32     | expr OR expr .
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 32 (expr)


State 95

   25 expr: expr . ADD expr
   25     | expr ADD expr .
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 25 (expr)


State 96

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   26     | expr SUB expr .
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 26 (expr)


State 97

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   27     | expr MUL expr .
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 27 (expr)


State 98

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   28     | expr DIV expr .
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 28 (expr)


State 99

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   29     | expr MOD expr .
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 29 (expr)


State 100

   11 statement: SEMICOLON .

    $default  reduce using rule 11 (statement)


State 101

   17 statement: LBRACE . fake_2 statements RBRACE

    $default  reduce using rule 18 (fake_2)

    fake_2  转到状态 119


State 102

   16 statement: RETURN . INT_CONST SEMICOLON

    INTEGER_H  shift, and go to state 45
    INTEGER_D  shift, and go to state 46
    INTEGER_O  shift, and go to state 47
    INTEGER_B  shift, and go to state 48

    INT_CONST  转到状态 120


State 103

   68 if_else_while_for_stmt: FOR . LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    LPAREN  shift, and go to state 121


State 104

   67 if_else_while_for_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 122


State 105

   65 if_else_while_for_stmt: IF . LPAREN expr RPAREN statement
   66                       | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 123


State 106

   58 IO_stmt: PRINTF . LPAREN STRING COMMA O_expr RPAREN
   59        | PRINTF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 124


State 107

   60 IO_stmt: SCANF . LPAREN STRING COMMA I_expr RPAREN

    LPAREN  shift, and go to state 125


State 108

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements . RBRACE
   10 statements: statements . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    RBRACE      shift, and go to state 126
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 127
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 109

    9 statements: statement .

    $default  reduce using rule 9 (statements)


State 110

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   54 assign_stmt: expr . SELF_ADD
   55            | expr . SELF_SUB

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81
    SELF_ADD   shift, and go to state 128
    SELF_SUB   shift, and go to state 129


State 111

   12 statement: decl_stmt . SEMICOLON
   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID

    SEMICOLON  shift, and go to state 130
    COMMA      shift, and go to state 18


State 112

   13 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 113

   49 assign_stmt: base_assign_stmt .

    $default  reduce using rule 49 (assign_stmt)


State 114

   14 statement: IO_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 132


State 115

   15 statement: if_else_while_for_stmt .

    $default  reduce using rule 15 (statement)


State 116

   40 decl_stmt: Type . ID ASSIGN expr
   41          | Type . ID
   44          | Type . MUL ID ASSIGN b_AND expr
   45          | Type . MUL ID
   46          | Type . b_AND ID ASSIGN ID
   47          | Type . ARRAY ASSIGN arr_assign_expr
   48          | Type . ARRAY

    MUL         shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    b_AND       shift, and go to state 22

    ARRAY  转到状态 23
    ID     转到状态 24


State 117

   19 expr: ID .
   50 assign_stmt: ID . ADD_ASSIGN expr
   51            | ID . SUB_ASSIGN expr
   52            | ID . MUL_ASSIGN expr
   53            | ID . DIV_ASSIGN expr
   56 base_assign_stmt: ID . ASSIGN expr
   57                 | ID . ASSIGN base_assign_stmt

    ASSIGN      shift, and go to state 133
    ADD_ASSIGN  shift, and go to state 134
    SUB_ASSIGN  shift, and go to state 135
    MUL_ASSIGN  shift, and go to state 136
    DIV_ASSIGN  shift, and go to state 137

    $default  reduce using rule 19 (expr)


State 118

   91 arr_element: arr_element COMMA arr_ele .

    $default  reduce using rule 91 (arr_element)


State 119

   17 statement: LBRACE fake_2 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statements              转到状态 138
    statement               转到状态 109
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 120

   16 statement: RETURN INT_CONST . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 121

   68 if_else_while_for_stmt: FOR LPAREN . for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    $default  reduce using rule 71 (for_expr_1)

    expr              转到状态 110
    decl_stmt         转到状态 140
    assign_stmt       转到状态 141
    base_assign_stmt  转到状态 113
    for_expr_1        转到状态 142
    Type              转到状态 116
    INT_CONST         转到状态 53
    ID                转到状态 117


State 122

   67 if_else_while_for_stmt: WHILE LPAREN . expr RPAREN statement

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 143
    INT_CONST  转到状态 53
    ID         转到状态 54


State 123

   65 if_else_while_for_stmt: IF LPAREN . expr RPAREN statement
   66                       | IF LPAREN . expr RPAREN statement ELSE statement

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 144
    INT_CONST  转到状态 53
    ID         转到状态 54


State 124

   58 IO_stmt: PRINTF LPAREN . STRING COMMA O_expr RPAREN
   59        | PRINTF LPAREN . STRING RPAREN

    STRING  shift, and go to state 145


State 125

   60 IO_stmt: SCANF LPAREN . STRING COMMA I_expr RPAREN

    STRING  shift, and go to state 146


State 126

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE .

    $default  reduce using rule 7 (Func_Def)


State 127

   10 statements: statements statement .

    $default  reduce using rule 10 (statements)


State 128

   54 assign_stmt: expr SELF_ADD .

    $default  reduce using rule 54 (assign_stmt)


State 129

   55 assign_stmt: expr SELF_SUB .

    $default  reduce using rule 55 (assign_stmt)


State 130

   12 statement: decl_stmt SEMICOLON .

    $default  reduce using rule 12 (statement)


State 131

   13 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 13 (statement)


State 132

   14 statement: IO_stmt SEMICOLON .

    $default  reduce using rule 14 (statement)


State 133

   56 base_assign_stmt: ID ASSIGN . expr
   57                 | ID ASSIGN . base_assign_stmt

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr              转到状态 147
    base_assign_stmt  转到状态 148
    INT_CONST         转到状态 53
    ID                转到状态 149


State 134

   50 assign_stmt: ID ADD_ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 150
    INT_CONST  转到状态 53
    ID         转到状态 54


State 135

   51 assign_stmt: ID SUB_ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 151
    INT_CONST  转到状态 53
    ID         转到状态 54


State 136

   52 assign_stmt: ID MUL_ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 152
    INT_CONST  转到状态 53
    ID         转到状态 54


State 137

   53 assign_stmt: ID DIV_ASSIGN . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 153
    INT_CONST  转到状态 53
    ID         转到状态 54


State 138

   10 statements: statements . statement
   17 statement: LBRACE fake_2 statements . RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    RBRACE      shift, and go to state 154
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 127
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 139

   16 statement: RETURN INT_CONST SEMICOLON .

    $default  reduce using rule 16 (statement)


State 140

   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID
   69 for_expr_1: decl_stmt .

    COMMA  shift, and go to state 18

    $default  reduce using rule 69 (for_expr_1)


State 141

   70 for_expr_1: assign_stmt .

    $default  reduce using rule 70 (for_expr_1)


State 142

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 . SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 155


State 143

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   67 if_else_while_for_stmt: WHILE LPAREN expr . RPAREN statement

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81
    RPAREN     shift, and go to state 156


State 144

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   65 if_else_while_for_stmt: IF LPAREN expr . RPAREN statement
   66                       | IF LPAREN expr . RPAREN statement ELSE statement

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81
    RPAREN     shift, and go to state 157


State 145

   58 IO_stmt: PRINTF LPAREN STRING . COMMA O_expr RPAREN
   59        | PRINTF LPAREN STRING . RPAREN

    COMMA   shift, and go to state 158
    RPAREN  shift, and go to state 159


State 146

   60 IO_stmt: SCANF LPAREN STRING . COMMA I_expr RPAREN

    COMMA  shift, and go to state 160


State 147

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   56 base_assign_stmt: ID ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 56 (base_assign_stmt)


State 148

   57 base_assign_stmt: ID ASSIGN base_assign_stmt .

    $default  reduce using rule 57 (base_assign_stmt)


State 149

   19 expr: ID .
   56 base_assign_stmt: ID . ASSIGN expr
   57                 | ID . ASSIGN base_assign_stmt

    ASSIGN  shift, and go to state 133

    $default  reduce using rule 19 (expr)


State 150

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   50 assign_stmt: ID ADD_ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 50 (assign_stmt)


State 151

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   51 assign_stmt: ID SUB_ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 51 (assign_stmt)


State 152

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   52 assign_stmt: ID MUL_ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 52 (assign_stmt)


State 153

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   53 assign_stmt: ID DIV_ASSIGN expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 53 (assign_stmt)


State 154

   17 statement: LBRACE fake_2 statements RBRACE .

    $default  reduce using rule 17 (statement)


State 155

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON . for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    $default  reduce using rule 73 (for_expr_2)

    expr        转到状态 161
    for_expr_2  转到状态 162
    INT_CONST   转到状态 53
    ID          转到状态 54


State 156

   67 if_else_while_for_stmt: WHILE LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 163
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 157

   65 if_else_while_for_stmt: IF LPAREN expr RPAREN . statement
   66                       | IF LPAREN expr RPAREN . statement ELSE statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 164
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 158

   58 IO_stmt: PRINTF LPAREN STRING COMMA . O_expr RPAREN

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 165
    O_expr     转到状态 166
    INT_CONST  转到状态 53
    ID         转到状态 54


State 159

   59 IO_stmt: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 59 (IO_stmt)


State 160

   60 IO_stmt: SCANF LPAREN STRING COMMA . I_expr RPAREN

    b_AND  shift, and go to state 167

    I_expr  转到状态 168


State 161

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   72 for_expr_2: expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 72 (for_expr_2)


State 162

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 . SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 169


State 163

   67 if_else_while_for_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 67 (if_else_while_for_stmt)


State 164

   65 if_else_while_for_stmt: IF LPAREN expr RPAREN statement .
   66                       | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 170

    ELSE      [reduce using rule 65 (if_else_while_for_stmt)]
    $default  reduce using rule 65 (if_else_while_for_stmt)


State 165

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   61 O_expr: expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 61 (O_expr)


State 166

   58 IO_stmt: PRINTF LPAREN STRING COMMA O_expr . RPAREN
   62 O_expr: O_expr . COMMA expr

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 172


State 167

   63 I_expr: b_AND . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 173
    INT_CONST  转到状态 53
    ID         转到状态 54


State 168

   60 IO_stmt: SCANF LPAREN STRING COMMA I_expr . RPAREN
   64 I_expr: I_expr . COMMA b_AND expr

    COMMA   shift, and go to state 174
    RPAREN  shift, and go to state 175


State 169

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON . for_expr_3 RPAREN statement

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    $default  reduce using rule 75 (for_expr_3)

    expr              转到状态 110
    assign_stmt       转到状态 176
    base_assign_stmt  转到状态 113
    for_expr_3        转到状态 177
    INT_CONST         转到状态 53
    ID                转到状态 117


State 170

   66 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 178
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 171

   62 O_expr: O_expr COMMA . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 179
    INT_CONST  转到状态 53
    ID         转到状态 54


State 172

   58 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN .

    $default  reduce using rule 58 (IO_stmt)


State 173

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   63 I_expr: b_AND expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 63 (I_expr)


State 174

   64 I_expr: I_expr COMMA . b_AND expr

    b_AND  shift, and go to state 180


State 175

   60 IO_stmt: SCANF LPAREN STRING COMMA I_expr RPAREN .

    $default  reduce using rule 60 (IO_stmt)


State 176

   74 for_expr_3: assign_stmt .

    $default  reduce using rule 74 (for_expr_3)


State 177

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 . RPAREN statement

    RPAREN  shift, and go to state 181


State 178

   66 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 66 (if_else_while_for_stmt)


State 179

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   62 O_expr: O_expr COMMA expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 62 (O_expr)


State 180

   64 I_expr: I_expr COMMA b_AND . expr

    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    LPAREN      shift, and go to state 44
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51

    expr       转到状态 182
    INT_CONST  转到状态 53
    ID         转到状态 54


State 181

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 42
    SUB         shift, and go to state 43
    SEMICOLON   shift, and go to state 100
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 101
    IDENTIFIER  shift, and go to state 25
    INTEGER_H   shift, and go to state 45
    INTEGER_D   shift, and go to state 46
    INTEGER_O   shift, and go to state 47
    INTEGER_B   shift, and go to state 48
    CHAR        shift, and go to state 49
    BOOL        shift, and go to state 50
    STRING      shift, and go to state 51
    RETURN      shift, and go to state 102
    FOR         shift, and go to state 103
    WHILE       shift, and go to state 104
    IF          shift, and go to state 105
    PRINTF      shift, and go to state 106
    SCANF       shift, and go to state 107

    statement               转到状态 183
    expr                    转到状态 110
    decl_stmt               转到状态 111
    assign_stmt             转到状态 112
    base_assign_stmt        转到状态 113
    IO_stmt                 转到状态 114
    if_else_while_for_stmt  转到状态 115
    Type                    转到状态 116
    INT_CONST               转到状态 53
    ID                      转到状态 117


State 182

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   64 I_expr: I_expr COMMA b_AND expr .

    EQ         shift, and go to state 69
    NOT_EQ     shift, and go to state 70
    LESS_THAN  shift, and go to state 71
    LESS_EQ    shift, and go to state 72
    MORE_THAN  shift, and go to state 73
    MORE_EQ    shift, and go to state 74
    AND        shift, and go to state 75
    OR         shift, and go to state 76
    ADD        shift, and go to state 77
    SUB        shift, and go to state 78
    MUL        shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81

    $default  reduce using rule 64 (I_expr)


State 183

   68 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement .

    $default  reduce using rule 68 (if_else_while_for_stmt)
