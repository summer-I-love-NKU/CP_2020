Terminals unused in grammar

   DOT
   RETURN
   ELSE_IF
   b_OR
   b_NOR
   b_NOT
   pre_SELF_ADD
   pre_SELF_SUB


状态 139 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    2 fake_1: %empty

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | decl_stmt SEMICOLON
    7          | assign_stmt SEMICOLON
    8          | IO_stmt SEMICOLON
    9          | if_else_while_for_stmt
   10          | LBRACE fake_2 statements RBRACE

   11 fake_2: %empty

   12 expr: ID
   13     | INT_CONST
   14     | CHAR
   15     | STRING
   16     | BOOL
   17     | LPAREN expr RPAREN
   18     | expr ADD expr
   19     | expr SUB expr
   20     | expr MUL expr
   21     | expr DIV expr
   22     | expr MOD expr
   23     | SUB expr
   24     | expr AND expr
   25     | expr OR expr
   26     | NOT expr
   27     | expr LESS_EQ expr
   28     | expr LESS_THAN expr
   29     | expr MORE_EQ expr
   30     | expr MORE_THAN expr
   31     | expr NOT_EQ expr
   32     | expr EQ expr

   33 decl_stmt: Type ID ASSIGN expr
   34          | Type ID
   35          | decl_stmt COMMA ID ASSIGN expr
   36          | decl_stmt COMMA ID
   37          | Type MUL ID ASSIGN b_AND expr
   38          | Type MUL ID
   39          | Type b_AND ID ASSIGN ID
   40          | Type ARRAY ASSIGN arr_assign_expr
   41          | Type ARRAY

   42 assign_stmt: base_assign_stmt
   43            | ID ADD_ASSIGN expr
   44            | ID SUB_ASSIGN expr
   45            | ID MUL_ASSIGN expr
   46            | ID DIV_ASSIGN expr
   47            | expr SELF_ADD
   48            | expr SELF_SUB

   49 base_assign_stmt: ID ASSIGN expr

   50 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN
   51        | SCANF LPAREN STRING COMMA I_expr RPAREN

   52 O_expr: expr
   53       | O_expr COMMA expr

   54 I_expr: b_AND expr
   55       | I_expr COMMA b_AND expr

   56 if_else_while_for_stmt: IF LPAREN expr RPAREN statement
   57                       | IF LPAREN expr RPAREN statement ELSE statement
   58                       | WHILE LPAREN expr RPAREN statement
   59                       | FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

   60 for_expr_1: decl_stmt
   61           | assign_stmt
   62           | %empty

   63 for_expr_2: expr
   64           | %empty

   65 for_expr_3: assign_stmt
   66           | %empty

   67 Type: T_INT
   68     | T_CHAR
   69     | T_BOOL
   70     | T_VOID
   71     | CONST T_INT
   72     | CONST T_CHAR

   73 INT_CONST: INTEGER_H
   74          | INTEGER_D
   75          | INTEGER_O
   76          | INTEGER_B

   77 INTEGER_D: INTEGER_DP
   78          | INTEGER_DN

   79 ARRAY: IDENTIFIER LMPAREN INTEGER_DP RMPAREN
   80      | ARRAY LMPAREN INTEGER_DP RMPAREN

   81 arr_assign_expr: LBRACE arr_element RBRACE

   82 arr_element: arr_ele
   83            | arr_element COMMA arr_ele

   84 arr_ele: INT_CONST
   85        | CHAR
   86        | STRING

   87 ID: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 67 71
T_CHAR (259) 68 72
T_BOOL (260) 69
T_VOID (261) 70
CONST (262) 71 72
ASSIGN (263) 33 35 37 39 40 49
ADD_ASSIGN (264) 43
SUB_ASSIGN (265) 44
MUL_ASSIGN (266) 45
DIV_ASSIGN (267) 46
EQ (268) 32
NOT_EQ (269) 31
LESS_THAN (270) 28
LESS_EQ (271) 27
MORE_THAN (272) 30
MORE_EQ (273) 29
AND (274) 24
OR (275) 25
NOT (276) 26
ADD (277) 18
SUB (278) 19 23
MUL (279) 20 37 38
DIV (280) 21
MOD (281) 22
SELF_ADD (282) 47
SELF_SUB (283) 48
SEMICOLON (284) 5 6 7 8 59
COMMA (285) 35 36 50 51 53 55 83
DOT (286)
LPAREN (287) 1 17 50 51 56 57 58 59
RPAREN (288) 1 17 50 51 56 57 58 59
LBRACE (289) 1 10 81
RBRACE (290) 1 10 81
LMPAREN (291) 79 80
RMPAREN (292) 79 80
IDENTIFIER (293) 79 87
INTEGER_H (294) 73
INTEGER_DP (295) 77 79 80
INTEGER_DN (296) 78
INTEGER_O (297) 75
INTEGER_B (298) 76
CHAR (299) 14 85
BOOL (300) 16
STRING (301) 15 50 51 86
MAIN (302) 1
RETURN (303)
FOR (304) 59
WHILE (305) 58
IF (306) 56 57
ELSE (307) 57
ELSE_IF (308)
PRINTF (309) 50
SCANF (310) 51
b_OR (311)
b_NOR (312)
b_AND (313) 37 39 54 55
UMINUS (314)
b_NOT (315)
pre_SELF_ADD (316)
pre_SELF_SUB (317)
GET_ADDRESS (318)
POINTER (319)


Nonterminals, with rules where they appear

$accept (65)
    左： 0
program (66)
    左： 1, 右： 0
fake_1 (67)
    左： 2, 右： 1
statements (68)
    左： 3 4, 右： 1 4 10
statement (69)
    左： 5 6 7 8 9 10, 右： 3 4 56 57 58 59
fake_2 (70)
    左： 11, 右： 10
expr (71)
    左： 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32, 右： 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    35 37 43 44 45 46 47 48 49 52 53 54 55 56 57 58 63
decl_stmt (72)
    左： 33 34 35 36 37 38 39 40 41, 右： 6 35 36 60
assign_stmt (73)
    左： 42 43 44 45 46 47 48, 右： 7 61 65
base_assign_stmt (74)
    左： 49, 右： 42
IO_stmt (75)
    左： 50 51, 右： 8
O_expr (76)
    左： 52 53, 右： 50 53
I_expr (77)
    左： 54 55, 右： 51 55
if_else_while_for_stmt (78)
    左： 56 57 58 59, 右： 9
for_expr_1 (79)
    左： 60 61 62, 右： 59
for_expr_2 (80)
    左： 63 64, 右： 59
for_expr_3 (81)
    左： 65 66, 右： 59
Type (82)
    左： 67 68 69 70 71 72, 右： 1 33 34 37 38 39 40 41
INT_CONST (83)
    左： 73 74 75 76, 右： 13 84
INTEGER_D (84)
    左： 77 78, 右： 74
ARRAY (85)
    左： 79 80, 右： 40 41 80
arr_assign_expr (86)
    左： 81, 右： 40
arr_element (87)
    左： 82 83, 右： 81 83
arr_ele (88)
    左： 84 85 86, 右： 82 83
ID (89)
    左： 87, 右： 12 33 34 35 36 37 38 39 43 44 45 46 49


State 0

    0 $accept: . program $end

    T_INT   shift, and go to state 1
    T_CHAR  shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    program  转到状态 6
    Type     转到状态 7


State 1

   67 Type: T_INT .

    $default  reduce using rule 67 (Type)


State 2

   68 Type: T_CHAR .

    $default  reduce using rule 68 (Type)


State 3

   69 Type: T_BOOL .

    $default  reduce using rule 69 (Type)


State 4

   70 Type: T_VOID .

    $default  reduce using rule 70 (Type)


State 5

   71 Type: CONST . T_INT
   72     | CONST . T_CHAR

    T_INT   shift, and go to state 8
    T_CHAR  shift, and go to state 9


State 6

    0 $accept: program . $end

    $end  shift, and go to state 10


State 7

    1 program: Type . MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    MAIN  shift, and go to state 11


State 8

   71 Type: CONST T_INT .

    $default  reduce using rule 71 (Type)


State 9

   72 Type: CONST T_CHAR .

    $default  reduce using rule 72 (Type)


State 10

    0 $accept: program $end .

    $default  接受


State 11

    1 program: Type MAIN . LPAREN RPAREN LBRACE fake_1 statements RBRACE

    LPAREN  shift, and go to state 12


State 12

    1 program: Type MAIN LPAREN . RPAREN LBRACE fake_1 statements RBRACE

    RPAREN  shift, and go to state 13


State 13

    1 program: Type MAIN LPAREN RPAREN . LBRACE fake_1 statements RBRACE

    LBRACE  shift, and go to state 14


State 14

    1 program: Type MAIN LPAREN RPAREN LBRACE . fake_1 statements RBRACE

    $default  reduce using rule 2 (fake_1)

    fake_1  转到状态 15


State 15

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statements              转到状态 35
    statement               转到状态 36
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 16

   26 expr: NOT . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 47
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 17

   23 expr: SUB . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 49
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 18

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 19

   17 expr: LPAREN . expr RPAREN

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 50
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 20

   10 statement: LBRACE . fake_2 statements RBRACE

    $default  reduce using rule 11 (fake_2)

    fake_2  转到状态 51


State 21

   87 ID: IDENTIFIER .

    $default  reduce using rule 87 (ID)


State 22

   73 INT_CONST: INTEGER_H .

    $default  reduce using rule 73 (INT_CONST)


State 23

   77 INTEGER_D: INTEGER_DP .

    $default  reduce using rule 77 (INTEGER_D)


State 24

   78 INTEGER_D: INTEGER_DN .

    $default  reduce using rule 78 (INTEGER_D)


State 25

   75 INT_CONST: INTEGER_O .

    $default  reduce using rule 75 (INT_CONST)


State 26

   76 INT_CONST: INTEGER_B .

    $default  reduce using rule 76 (INT_CONST)


State 27

   14 expr: CHAR .

    $default  reduce using rule 14 (expr)


State 28

   16 expr: BOOL .

    $default  reduce using rule 16 (expr)


State 29

   15 expr: STRING .

    $default  reduce using rule 15 (expr)


State 30

   59 if_else_while_for_stmt: FOR . LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    LPAREN  shift, and go to state 52


State 31

   58 if_else_while_for_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 53


State 32

   56 if_else_while_for_stmt: IF . LPAREN expr RPAREN statement
   57                       | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 54


State 33

   50 IO_stmt: PRINTF . LPAREN STRING COMMA O_expr RPAREN

    LPAREN  shift, and go to state 55


State 34

   51 IO_stmt: SCANF . LPAREN STRING COMMA I_expr RPAREN

    LPAREN  shift, and go to state 56


State 35

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements . RBRACE
    4 statements: statements . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    RBRACE      shift, and go to state 57
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 58
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 36

    3 statements: statement .

    $default  reduce using rule 3 (statements)


State 37

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   47 assign_stmt: expr . SELF_ADD
   48            | expr . SELF_SUB

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71
    SELF_ADD   shift, and go to state 72
    SELF_SUB   shift, and go to state 73


State 38

    6 statement: decl_stmt . SEMICOLON
   35 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   36          | decl_stmt . COMMA ID

    SEMICOLON  shift, and go to state 74
    COMMA      shift, and go to state 75


State 39

    7 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 40

   42 assign_stmt: base_assign_stmt .

    $default  reduce using rule 42 (assign_stmt)


State 41

    8 statement: IO_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 42

    9 statement: if_else_while_for_stmt .

    $default  reduce using rule 9 (statement)


State 43

   33 decl_stmt: Type . ID ASSIGN expr
   34          | Type . ID
   37          | Type . MUL ID ASSIGN b_AND expr
   38          | Type . MUL ID
   39          | Type . b_AND ID ASSIGN ID
   40          | Type . ARRAY ASSIGN arr_assign_expr
   41          | Type . ARRAY

    MUL         shift, and go to state 78
    IDENTIFIER  shift, and go to state 79
    b_AND       shift, and go to state 80

    ARRAY  转到状态 81
    ID     转到状态 82


State 44

   13 expr: INT_CONST .

    $default  reduce using rule 13 (expr)


State 45

   74 INT_CONST: INTEGER_D .

    $default  reduce using rule 74 (INT_CONST)


State 46

   12 expr: ID .
   43 assign_stmt: ID . ADD_ASSIGN expr
   44            | ID . SUB_ASSIGN expr
   45            | ID . MUL_ASSIGN expr
   46            | ID . DIV_ASSIGN expr
   49 base_assign_stmt: ID . ASSIGN expr

    ASSIGN      shift, and go to state 83
    ADD_ASSIGN  shift, and go to state 84
    SUB_ASSIGN  shift, and go to state 85
    MUL_ASSIGN  shift, and go to state 86
    DIV_ASSIGN  shift, and go to state 87

    $default  reduce using rule 12 (expr)


State 47

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   26     | NOT expr .
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


State 48

   12 expr: ID .

    $default  reduce using rule 12 (expr)


State 49

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   23     | SUB expr .
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    $default  reduce using rule 23 (expr)


State 50

   17 expr: LPAREN expr . RPAREN
   18     | expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71
    RPAREN     shift, and go to state 88


State 51

   10 statement: LBRACE fake_2 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statements              转到状态 89
    statement               转到状态 36
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 52

   59 if_else_while_for_stmt: FOR LPAREN . for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    $default  reduce using rule 62 (for_expr_1)

    expr              转到状态 37
    decl_stmt         转到状态 90
    assign_stmt       转到状态 91
    base_assign_stmt  转到状态 40
    for_expr_1        转到状态 92
    Type              转到状态 43
    INT_CONST         转到状态 44
    INTEGER_D         转到状态 45
    ID                转到状态 46


State 53

   58 if_else_while_for_stmt: WHILE LPAREN . expr RPAREN statement

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 93
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 54

   56 if_else_while_for_stmt: IF LPAREN . expr RPAREN statement
   57                       | IF LPAREN . expr RPAREN statement ELSE statement

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 94
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 55

   50 IO_stmt: PRINTF LPAREN . STRING COMMA O_expr RPAREN

    STRING  shift, and go to state 95


State 56

   51 IO_stmt: SCANF LPAREN . STRING COMMA I_expr RPAREN

    STRING  shift, and go to state 96


State 57

    1 program: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE .

    $default  reduce using rule 1 (program)


State 58

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 59

   32 expr: expr EQ . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 97
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 60

   31 expr: expr NOT_EQ . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 98
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 61

   28 expr: expr LESS_THAN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 99
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 62

   27 expr: expr LESS_EQ . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 100
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 63

   30 expr: expr MORE_THAN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 101
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 64

   29 expr: expr MORE_EQ . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 102
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 65

   24 expr: expr AND . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 103
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 66

   25 expr: expr OR . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 104
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 67

   18 expr: expr ADD . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 105
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 68

   19 expr: expr SUB . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 106
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 69

   20 expr: expr MUL . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 107
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 70

   21 expr: expr DIV . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 108
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 71

   22 expr: expr MOD . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 109
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 72

   47 assign_stmt: expr SELF_ADD .

    $default  reduce using rule 47 (assign_stmt)


State 73

   48 assign_stmt: expr SELF_SUB .

    $default  reduce using rule 48 (assign_stmt)


State 74

    6 statement: decl_stmt SEMICOLON .

    $default  reduce using rule 6 (statement)


State 75

   35 decl_stmt: decl_stmt COMMA . ID ASSIGN expr
   36          | decl_stmt COMMA . ID

    IDENTIFIER  shift, and go to state 21

    ID  转到状态 110


State 76

    7 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 7 (statement)


State 77

    8 statement: IO_stmt SEMICOLON .

    $default  reduce using rule 8 (statement)


State 78

   37 decl_stmt: Type MUL . ID ASSIGN b_AND expr
   38          | Type MUL . ID

    IDENTIFIER  shift, and go to state 21

    ID  转到状态 111


State 79

   79 ARRAY: IDENTIFIER . LMPAREN INTEGER_DP RMPAREN
   87 ID: IDENTIFIER .

    LMPAREN  shift, and go to state 112

    $default  reduce using rule 87 (ID)


State 80

   39 decl_stmt: Type b_AND . ID ASSIGN ID

    IDENTIFIER  shift, and go to state 21

    ID  转到状态 113


State 81

   40 decl_stmt: Type ARRAY . ASSIGN arr_assign_expr
   41          | Type ARRAY .
   80 ARRAY: ARRAY . LMPAREN INTEGER_DP RMPAREN

    ASSIGN   shift, and go to state 114
    LMPAREN  shift, and go to state 115

    $default  reduce using rule 41 (decl_stmt)


State 82

   33 decl_stmt: Type ID . ASSIGN expr
   34          | Type ID .

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 34 (decl_stmt)


State 83

   49 base_assign_stmt: ID ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 117
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 84

   43 assign_stmt: ID ADD_ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 118
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 85

   44 assign_stmt: ID SUB_ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 119
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 86

   45 assign_stmt: ID MUL_ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 120
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 87

   46 assign_stmt: ID DIV_ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 121
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 88

   17 expr: LPAREN expr RPAREN .

    $default  reduce using rule 17 (expr)


State 89

    4 statements: statements . statement
   10 statement: LBRACE fake_2 statements . RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    RBRACE      shift, and go to state 122
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 58
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 90

   35 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   36          | decl_stmt . COMMA ID
   60 for_expr_1: decl_stmt .

    COMMA  shift, and go to state 75

    $default  reduce using rule 60 (for_expr_1)


State 91

   61 for_expr_1: assign_stmt .

    $default  reduce using rule 61 (for_expr_1)


State 92

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 . SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 123


State 93

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   58 if_else_while_for_stmt: WHILE LPAREN expr . RPAREN statement

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71
    RPAREN     shift, and go to state 124


State 94

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   56 if_else_while_for_stmt: IF LPAREN expr . RPAREN statement
   57                       | IF LPAREN expr . RPAREN statement ELSE statement

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71
    RPAREN     shift, and go to state 125


State 95

   50 IO_stmt: PRINTF LPAREN STRING . COMMA O_expr RPAREN

    COMMA  shift, and go to state 126


State 96

   51 IO_stmt: SCANF LPAREN STRING . COMMA I_expr RPAREN

    COMMA  shift, and go to state 127


State 97

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 32 (expr)


State 98

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   31     | expr NOT_EQ expr .
   32     | expr . EQ expr

    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 31 (expr)


State 99

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   28     | expr LESS_THAN expr .
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 28 (expr)


State 100

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   27     | expr LESS_EQ expr .
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 27 (expr)


State 101

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   30     | expr MORE_THAN expr .
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 30 (expr)


State 102

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   29     | expr MORE_EQ expr .
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 29 (expr)


State 103

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   24     | expr AND expr .
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 24 (expr)


State 104

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   25     | expr OR expr .
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 25 (expr)


State 105

   18 expr: expr . ADD expr
   18     | expr ADD expr .
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 18 (expr)


State 106

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   19     | expr SUB expr .
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70
    MOD  shift, and go to state 71

    $default  reduce using rule 19 (expr)


State 107

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   20     | expr MUL expr .
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    $default  reduce using rule 20 (expr)


State 108

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   21     | expr DIV expr .
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    $default  reduce using rule 21 (expr)


State 109

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   22     | expr MOD expr .
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr

    $default  reduce using rule 22 (expr)


State 110

   35 decl_stmt: decl_stmt COMMA ID . ASSIGN expr
   36          | decl_stmt COMMA ID .

    ASSIGN  shift, and go to state 128

    $default  reduce using rule 36 (decl_stmt)


State 111

   37 decl_stmt: Type MUL ID . ASSIGN b_AND expr
   38          | Type MUL ID .

    ASSIGN  shift, and go to state 129

    $default  reduce using rule 38 (decl_stmt)


State 112

   79 ARRAY: IDENTIFIER LMPAREN . INTEGER_DP RMPAREN

    INTEGER_DP  shift, and go to state 130


State 113

   39 decl_stmt: Type b_AND ID . ASSIGN ID

    ASSIGN  shift, and go to state 131


State 114

   40 decl_stmt: Type ARRAY ASSIGN . arr_assign_expr

    LBRACE  shift, and go to state 132

    arr_assign_expr  转到状态 133


State 115

   80 ARRAY: ARRAY LMPAREN . INTEGER_DP RMPAREN

    INTEGER_DP  shift, and go to state 134


State 116

   33 decl_stmt: Type ID ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 135
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 117

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   49 base_assign_stmt: ID ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 49 (base_assign_stmt)


State 118

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   43 assign_stmt: ID ADD_ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 43 (assign_stmt)


State 119

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   44 assign_stmt: ID SUB_ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 44 (assign_stmt)


State 120

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   45 assign_stmt: ID MUL_ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 45 (assign_stmt)


State 121

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   46 assign_stmt: ID DIV_ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 46 (assign_stmt)


State 122

   10 statement: LBRACE fake_2 statements RBRACE .

    $default  reduce using rule 10 (statement)


State 123

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON . for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    $default  reduce using rule 64 (for_expr_2)

    expr        转到状态 136
    for_expr_2  转到状态 137
    INT_CONST   转到状态 44
    INTEGER_D   转到状态 45
    ID          转到状态 48


State 124

   58 if_else_while_for_stmt: WHILE LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 138
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 125

   56 if_else_while_for_stmt: IF LPAREN expr RPAREN . statement
   57                       | IF LPAREN expr RPAREN . statement ELSE statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 139
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 126

   50 IO_stmt: PRINTF LPAREN STRING COMMA . O_expr RPAREN

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 140
    O_expr     转到状态 141
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 127

   51 IO_stmt: SCANF LPAREN STRING COMMA . I_expr RPAREN

    b_AND  shift, and go to state 142

    I_expr  转到状态 143


State 128

   35 decl_stmt: decl_stmt COMMA ID ASSIGN . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 144
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 129

   37 decl_stmt: Type MUL ID ASSIGN . b_AND expr

    b_AND  shift, and go to state 145


State 130

   79 ARRAY: IDENTIFIER LMPAREN INTEGER_DP . RMPAREN

    RMPAREN  shift, and go to state 146


State 131

   39 decl_stmt: Type b_AND ID ASSIGN . ID

    IDENTIFIER  shift, and go to state 21

    ID  转到状态 147


State 132

   81 arr_assign_expr: LBRACE . arr_element RBRACE

    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 148
    STRING      shift, and go to state 149

    INT_CONST    转到状态 150
    INTEGER_D    转到状态 45
    arr_element  转到状态 151
    arr_ele      转到状态 152


State 133

   40 decl_stmt: Type ARRAY ASSIGN arr_assign_expr .

    $default  reduce using rule 40 (decl_stmt)


State 134

   80 ARRAY: ARRAY LMPAREN INTEGER_DP . RMPAREN

    RMPAREN  shift, and go to state 153


State 135

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   33 decl_stmt: Type ID ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 33 (decl_stmt)


State 136

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   63 for_expr_2: expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 63 (for_expr_2)


State 137

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 . SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 154


State 138

   58 if_else_while_for_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 58 (if_else_while_for_stmt)


State 139

   56 if_else_while_for_stmt: IF LPAREN expr RPAREN statement .
   57                       | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 155

    ELSE      [reduce using rule 56 (if_else_while_for_stmt)]
    $default  reduce using rule 56 (if_else_while_for_stmt)


State 140

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   52 O_expr: expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 52 (O_expr)


State 141

   50 IO_stmt: PRINTF LPAREN STRING COMMA O_expr . RPAREN
   53 O_expr: O_expr . COMMA expr

    COMMA   shift, and go to state 156
    RPAREN  shift, and go to state 157


State 142

   54 I_expr: b_AND . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 158
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 143

   51 IO_stmt: SCANF LPAREN STRING COMMA I_expr . RPAREN
   55 I_expr: I_expr . COMMA b_AND expr

    COMMA   shift, and go to state 159
    RPAREN  shift, and go to state 160


State 144

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   35 decl_stmt: decl_stmt COMMA ID ASSIGN expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 35 (decl_stmt)


State 145

   37 decl_stmt: Type MUL ID ASSIGN b_AND . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 161
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 146

   79 ARRAY: IDENTIFIER LMPAREN INTEGER_DP RMPAREN .

    $default  reduce using rule 79 (ARRAY)


State 147

   39 decl_stmt: Type b_AND ID ASSIGN ID .

    $default  reduce using rule 39 (decl_stmt)


State 148

   85 arr_ele: CHAR .

    $default  reduce using rule 85 (arr_ele)


State 149

   86 arr_ele: STRING .

    $default  reduce using rule 86 (arr_ele)


State 150

   84 arr_ele: INT_CONST .

    $default  reduce using rule 84 (arr_ele)


State 151

   81 arr_assign_expr: LBRACE arr_element . RBRACE
   83 arr_element: arr_element . COMMA arr_ele

    COMMA   shift, and go to state 162
    RBRACE  shift, and go to state 163


State 152

   82 arr_element: arr_ele .

    $default  reduce using rule 82 (arr_element)


State 153

   80 ARRAY: ARRAY LMPAREN INTEGER_DP RMPAREN .

    $default  reduce using rule 80 (ARRAY)


State 154

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON . for_expr_3 RPAREN statement

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    $default  reduce using rule 66 (for_expr_3)

    expr              转到状态 37
    assign_stmt       转到状态 164
    base_assign_stmt  转到状态 40
    for_expr_3        转到状态 165
    INT_CONST         转到状态 44
    INTEGER_D         转到状态 45
    ID                转到状态 46


State 155

   57 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 166
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 156

   53 O_expr: O_expr COMMA . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 167
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 157

   50 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN .

    $default  reduce using rule 50 (IO_stmt)


State 158

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   54 I_expr: b_AND expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 54 (I_expr)


State 159

   55 I_expr: I_expr COMMA . b_AND expr

    b_AND  shift, and go to state 168


State 160

   51 IO_stmt: SCANF LPAREN STRING COMMA I_expr RPAREN .

    $default  reduce using rule 51 (IO_stmt)


State 161

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   37 decl_stmt: Type MUL ID ASSIGN b_AND expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 37 (decl_stmt)


State 162

   83 arr_element: arr_element COMMA . arr_ele

    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 148
    STRING      shift, and go to state 149

    INT_CONST  转到状态 150
    INTEGER_D  转到状态 45
    arr_ele    转到状态 169


State 163

   81 arr_assign_expr: LBRACE arr_element RBRACE .

    $default  reduce using rule 81 (arr_assign_expr)


State 164

   65 for_expr_3: assign_stmt .

    $default  reduce using rule 65 (for_expr_3)


State 165

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 . RPAREN statement

    RPAREN  shift, and go to state 170


State 166

   57 if_else_while_for_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 57 (if_else_while_for_stmt)


State 167

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   53 O_expr: O_expr COMMA expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 53 (O_expr)


State 168

   55 I_expr: I_expr COMMA b_AND . expr

    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    LPAREN      shift, and go to state 19
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29

    expr       转到状态 171
    INT_CONST  转到状态 44
    INTEGER_D  转到状态 45
    ID         转到状态 48


State 169

   83 arr_element: arr_element COMMA arr_ele .

    $default  reduce using rule 83 (arr_element)


State 170

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    CONST       shift, and go to state 5
    NOT         shift, and go to state 16
    SUB         shift, and go to state 17
    SEMICOLON   shift, and go to state 18
    LPAREN      shift, and go to state 19
    LBRACE      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER_H   shift, and go to state 22
    INTEGER_DP  shift, and go to state 23
    INTEGER_DN  shift, and go to state 24
    INTEGER_O   shift, and go to state 25
    INTEGER_B   shift, and go to state 26
    CHAR        shift, and go to state 27
    BOOL        shift, and go to state 28
    STRING      shift, and go to state 29
    FOR         shift, and go to state 30
    WHILE       shift, and go to state 31
    IF          shift, and go to state 32
    PRINTF      shift, and go to state 33
    SCANF       shift, and go to state 34

    statement               转到状态 172
    expr                    转到状态 37
    decl_stmt               转到状态 38
    assign_stmt             转到状态 39
    base_assign_stmt        转到状态 40
    IO_stmt                 转到状态 41
    if_else_while_for_stmt  转到状态 42
    Type                    转到状态 43
    INT_CONST               转到状态 44
    INTEGER_D               转到状态 45
    ID                      转到状态 46


State 171

   18 expr: expr . ADD expr
   19     | expr . SUB expr
   20     | expr . MUL expr
   21     | expr . DIV expr
   22     | expr . MOD expr
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . LESS_EQ expr
   28     | expr . LESS_THAN expr
   29     | expr . MORE_EQ expr
   30     | expr . MORE_THAN expr
   31     | expr . NOT_EQ expr
   32     | expr . EQ expr
   55 I_expr: I_expr COMMA b_AND expr .

    EQ         shift, and go to state 59
    NOT_EQ     shift, and go to state 60
    LESS_THAN  shift, and go to state 61
    LESS_EQ    shift, and go to state 62
    MORE_THAN  shift, and go to state 63
    MORE_EQ    shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66
    ADD        shift, and go to state 67
    SUB        shift, and go to state 68
    MUL        shift, and go to state 69
    DIV        shift, and go to state 70
    MOD        shift, and go to state 71

    $default  reduce using rule 55 (I_expr)


State 172

   59 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement .

    $default  reduce using rule 59 (if_else_while_for_stmt)
