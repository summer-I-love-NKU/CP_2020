Terminals unused in grammar

   DOT
   BREAK
   CONTINUE
   b_OR
   b_NOR
   b_NOT
   pre_SELF_ADD
   pre_SELF_SUB


状态 0 conflicts: 6 shift/reduce
状态 61 conflicts: 3 reduce/reduce
状态 177 conflicts: 2 shift/reduce


语法

    0 $accept: CompUnit $end

    1 CompUnit: %empty
    2         | CompUnit Func_Def
    3         | CompUnit Decl
    4         | Func_Def
    5         | Decl

    6 Decl: decl_stmt SEMICOLON

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE

    8 fake_1: %empty

    9 statements: statement
   10           | statements statement

   11 statement: SEMICOLON
   12          | decl_stmt SEMICOLON
   13          | assign_stmt SEMICOLON
   14          | IO_stmt SEMICOLON
   15          | if_else_while_for_stmt
   16          | RETURN INT_CONST SEMICOLON
   17          | LBRACE fake_2 statements RBRACE

   18 fake_2: %empty

   19 expr: ID
   20     | INT_CONST
   21     | CHAR
   22     | STRING
   23     | BOOL
   24     | LPAREN expr RPAREN
   25     | expr ADD expr
   26     | expr SUB expr
   27     | expr MUL expr
   28     | expr DIV expr
   29     | expr MOD expr
   30     | SUB expr
   31     | expr AND expr
   32     | expr OR expr
   33     | NOT expr
   34     | expr LESS_EQ expr
   35     | expr LESS_THAN expr
   36     | expr MORE_EQ expr
   37     | expr MORE_THAN expr
   38     | expr NOT_EQ expr
   39     | expr EQ expr

   40 decl_stmt: Type ID ASSIGN expr
   41          | Type ID
   42          | decl_stmt COMMA ID ASSIGN expr
   43          | decl_stmt COMMA ID
   44          | Type MUL ID ASSIGN b_AND expr
   45          | Type MUL ID
   46          | Type b_AND ID ASSIGN ID
   47          | array_decl

   48 assign_stmt: base_assign_stmt
   49            | ID ADD_ASSIGN expr
   50            | ID SUB_ASSIGN expr
   51            | ID MUL_ASSIGN expr
   52            | ID DIV_ASSIGN expr
   53            | expr SELF_ADD
   54            | expr SELF_SUB

   55 base_assign_stmt: ID ASSIGN expr
   56                 | ID ASSIGN base_assign_stmt

   57 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN
   58        | PRINTF LPAREN STRING RPAREN
   59        | SCANF LPAREN STRING COMMA I_expr RPAREN

   60 O_expr: expr
   61       | O_expr COMMA expr

   62 I_expr: b_AND expr
   63       | I_expr COMMA b_AND expr

   64 if_else_while_for_stmt: if_else_stmt
   65                       | WHILE LPAREN expr RPAREN statement
   66                       | FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

   67 if_else_stmt: IF LPAREN expr RPAREN statement
   68             | IF LPAREN expr RPAREN statement ELSE statement
   69             | if_else_if ELSE statement

   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF LPAREN expr RPAREN statement
   71           | if_else_if ELSE_IF LPAREN expr RPAREN statement

   72 for_expr_1: decl_stmt
   73           | assign_stmt
   74           | %empty

   75 for_expr_2: expr
   76           | %empty

   77 for_expr_3: assign_stmt
   78           | %empty

   79 Type: T_INT
   80     | T_CHAR
   81     | T_BOOL
   82     | T_STRING
   83     | T_VOID
   84     | CONST T_INT
   85     | CONST T_CHAR

   86 INT_CONST: INTEGER_H
   87          | INTEGER_D
   88          | INTEGER_O
   89          | INTEGER_B

   90 array_decl: Type ARRAY ASSIGN arr_assign_expr
   91           | Type ARRAY

   92 ARRAY: IDENTIFIER LMPAREN INTEGER_D RMPAREN
   93      | ARRAY LMPAREN INTEGER_D RMPAREN

   94 arr_assign_expr: LBRACE arr_element RBRACE

   95 arr_element: arr_ele
   96            | arr_element COMMA arr_ele

   97 arr_ele: INT_CONST
   98        | CHAR
   99        | STRING

  100 ID: IDENTIFIER
  101   | IDENTIFIER LMPAREN INTEGER_D RMPAREN
  102   | IDENTIFIER LMPAREN ID RMPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT (258) 79 84
T_CHAR (259) 80 85
T_BOOL (260) 81
T_STRING (261) 82
T_VOID (262) 83
CONST (263) 84 85
ASSIGN (264) 40 42 44 46 55 56 90
ADD_ASSIGN (265) 49
SUB_ASSIGN (266) 50
MUL_ASSIGN (267) 51
DIV_ASSIGN (268) 52
EQ (269) 39
NOT_EQ (270) 38
LESS_THAN (271) 35
LESS_EQ (272) 34
MORE_THAN (273) 37
MORE_EQ (274) 36
AND (275) 31
OR (276) 32
NOT (277) 33
ADD (278) 25
SUB (279) 26 30
MUL (280) 27 44 45
DIV (281) 28
MOD (282) 29
SELF_ADD (283) 53
SELF_SUB (284) 54
SEMICOLON (285) 6 11 12 13 14 16 66
COMMA (286) 42 43 57 59 61 63 96
DOT (287)
LPAREN (288) 7 24 57 58 59 65 66 67 68 70 71
RPAREN (289) 7 24 57 58 59 65 66 67 68 70 71
LBRACE (290) 7 17 94
RBRACE (291) 7 17 94
LMPAREN (292) 92 93 101 102
RMPAREN (293) 92 93 101 102
IDENTIFIER (294) 92 100 101 102
INTEGER_H (295) 86
INTEGER_D (296) 87 92 93 101
INTEGER_O (297) 88
INTEGER_B (298) 89
CHAR (299) 21 98
BOOL (300) 23
STRING (301) 22 57 58 59 99
MAIN (302) 7
RETURN (303) 16
FOR (304) 66
WHILE (305) 65
IF (306) 67 68 70
ELSE (307) 68 69
ELSE_IF (308) 70 71
PRINTF (309) 57 58
SCANF (310) 59
BREAK (311)
CONTINUE (312)
b_OR (313)
b_NOR (314)
b_AND (315) 44 46 62 63
UMINUS (316)
b_NOT (317)
pre_SELF_ADD (318)
pre_SELF_SUB (319)
GET_ADDRESS (320)
POINTER (321)


Nonterminals, with rules where they appear

$accept (67)
    左： 0
CompUnit (68)
    左： 1 2 3 4 5, 右： 0 2 3
Decl (69)
    左： 6, 右： 3 5
Func_Def (70)
    左： 7, 右： 2 4
fake_1 (71)
    左： 8, 右： 7
statements (72)
    左： 9 10, 右： 7 10 17
statement (73)
    左： 11 12 13 14 15 16 17, 右： 9 10 65 66 67 68 69 70 71
fake_2 (74)
    左： 18, 右： 17
expr (75)
    左： 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39, 右： 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    42 44 49 50 51 52 53 54 55 60 61 62 63 65 67 68 70 71 75
decl_stmt (76)
    左： 40 41 42 43 44 45 46 47, 右： 6 12 42 43 72
assign_stmt (77)
    左： 48 49 50 51 52 53 54, 右： 13 73 77
base_assign_stmt (78)
    左： 55 56, 右： 48 56
IO_stmt (79)
    左： 57 58 59, 右： 14
O_expr (80)
    左： 60 61, 右： 57 61
I_expr (81)
    左： 62 63, 右： 59 63
if_else_while_for_stmt (82)
    左： 64 65 66, 右： 15
if_else_stmt (83)
    左： 67 68 69, 右： 64
if_else_if (84)
    左： 70 71, 右： 69 71
for_expr_1 (85)
    左： 72 73 74, 右： 66
for_expr_2 (86)
    左： 75 76, 右： 66
for_expr_3 (87)
    左： 77 78, 右： 66
Type (88)
    左： 79 80 81 82 83 84 85, 右： 7 40 41 44 45 46 90 91
INT_CONST (89)
    左： 86 87 88 89, 右： 16 20 97
array_decl (90)
    左： 90 91, 右： 47
ARRAY (91)
    左： 92 93, 右： 90 91 93
arr_assign_expr (92)
    左： 94, 右： 90
arr_element (93)
    左： 95 96, 右： 94 96
arr_ele (94)
    左： 97 98 99, 右： 95 96
ID (95)
    左： 100 101 102, 右： 19 40 41 42 43 44 45 46 49 50 51 52
    55 56 102


State 0

    0 $accept: . CompUnit $end

    T_INT     shift, and go to state 1
    T_CHAR    shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_STRING  shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    T_INT     [reduce using rule 1 (CompUnit)]
    T_CHAR    [reduce using rule 1 (CompUnit)]
    T_BOOL    [reduce using rule 1 (CompUnit)]
    T_STRING  [reduce using rule 1 (CompUnit)]
    T_VOID    [reduce using rule 1 (CompUnit)]
    CONST     [reduce using rule 1 (CompUnit)]
    $default  reduce using rule 1 (CompUnit)

    CompUnit    转到状态 7
    Decl        转到状态 8
    Func_Def    转到状态 9
    decl_stmt   转到状态 10
    Type        转到状态 11
    array_decl  转到状态 12


State 1

   79 Type: T_INT .

    $default  reduce using rule 79 (Type)


State 2

   80 Type: T_CHAR .

    $default  reduce using rule 80 (Type)


State 3

   81 Type: T_BOOL .

    $default  reduce using rule 81 (Type)


State 4

   82 Type: T_STRING .

    $default  reduce using rule 82 (Type)


State 5

   83 Type: T_VOID .

    $default  reduce using rule 83 (Type)


State 6

   84 Type: CONST . T_INT
   85     | CONST . T_CHAR

    T_INT   shift, and go to state 13
    T_CHAR  shift, and go to state 14


State 7

    0 $accept: CompUnit . $end
    2 CompUnit: CompUnit . Func_Def
    3         | CompUnit . Decl

    $end      shift, and go to state 15
    T_INT     shift, and go to state 1
    T_CHAR    shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_STRING  shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    Decl        转到状态 16
    Func_Def    转到状态 17
    decl_stmt   转到状态 10
    Type        转到状态 11
    array_decl  转到状态 12


State 8

    5 CompUnit: Decl .

    $default  reduce using rule 5 (CompUnit)


State 9

    4 CompUnit: Func_Def .

    $default  reduce using rule 4 (CompUnit)


State 10

    6 Decl: decl_stmt . SEMICOLON
   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID

    SEMICOLON  shift, and go to state 18
    COMMA      shift, and go to state 19


State 11

    7 Func_Def: Type . MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE
   40 decl_stmt: Type . ID ASSIGN expr
   41          | Type . ID
   44          | Type . MUL ID ASSIGN b_AND expr
   45          | Type . MUL ID
   46          | Type . b_AND ID ASSIGN ID
   90 array_decl: Type . ARRAY ASSIGN arr_assign_expr
   91           | Type . ARRAY

    MUL         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    MAIN        shift, and go to state 22
    b_AND       shift, and go to state 23

    ARRAY  转到状态 24
    ID     转到状态 25


State 12

   47 decl_stmt: array_decl .

    $default  reduce using rule 47 (decl_stmt)


State 13

   84 Type: CONST T_INT .

    $default  reduce using rule 84 (Type)


State 14

   85 Type: CONST T_CHAR .

    $default  reduce using rule 85 (Type)


State 15

    0 $accept: CompUnit $end .

    $default  接受


State 16

    3 CompUnit: CompUnit Decl .

    $default  reduce using rule 3 (CompUnit)


State 17

    2 CompUnit: CompUnit Func_Def .

    $default  reduce using rule 2 (CompUnit)


State 18

    6 Decl: decl_stmt SEMICOLON .

    $default  reduce using rule 6 (Decl)


State 19

   42 decl_stmt: decl_stmt COMMA . ID ASSIGN expr
   43          | decl_stmt COMMA . ID

    IDENTIFIER  shift, and go to state 26

    ID  转到状态 27


State 20

   44 decl_stmt: Type MUL . ID ASSIGN b_AND expr
   45          | Type MUL . ID

    IDENTIFIER  shift, and go to state 26

    ID  转到状态 28


State 21

   92 ARRAY: IDENTIFIER . LMPAREN INTEGER_D RMPAREN
  100 ID: IDENTIFIER .
  101   | IDENTIFIER . LMPAREN INTEGER_D RMPAREN
  102   | IDENTIFIER . LMPAREN ID RMPAREN

    LMPAREN  shift, and go to state 29

    $default  reduce using rule 100 (ID)


State 22

    7 Func_Def: Type MAIN . LPAREN RPAREN LBRACE fake_1 statements RBRACE

    LPAREN  shift, and go to state 30


State 23

   46 decl_stmt: Type b_AND . ID ASSIGN ID

    IDENTIFIER  shift, and go to state 26

    ID  转到状态 31


State 24

   90 array_decl: Type ARRAY . ASSIGN arr_assign_expr
   91           | Type ARRAY .
   93 ARRAY: ARRAY . LMPAREN INTEGER_D RMPAREN

    ASSIGN   shift, and go to state 32
    LMPAREN  shift, and go to state 33

    $default  reduce using rule 91 (array_decl)


State 25

   40 decl_stmt: Type ID . ASSIGN expr
   41          | Type ID .

    ASSIGN  shift, and go to state 34

    $default  reduce using rule 41 (decl_stmt)


State 26

  100 ID: IDENTIFIER .
  101   | IDENTIFIER . LMPAREN INTEGER_D RMPAREN
  102   | IDENTIFIER . LMPAREN ID RMPAREN

    LMPAREN  shift, and go to state 35

    $default  reduce using rule 100 (ID)


State 27

   42 decl_stmt: decl_stmt COMMA ID . ASSIGN expr
   43          | decl_stmt COMMA ID .

    ASSIGN  shift, and go to state 36

    $default  reduce using rule 43 (decl_stmt)


State 28

   44 decl_stmt: Type MUL ID . ASSIGN b_AND expr
   45          | Type MUL ID .

    ASSIGN  shift, and go to state 37

    $default  reduce using rule 45 (decl_stmt)


State 29

   92 ARRAY: IDENTIFIER LMPAREN . INTEGER_D RMPAREN
  101 ID: IDENTIFIER LMPAREN . INTEGER_D RMPAREN
  102   | IDENTIFIER LMPAREN . ID RMPAREN

    IDENTIFIER  shift, and go to state 26
    INTEGER_D   shift, and go to state 38

    ID  转到状态 39


State 30

    7 Func_Def: Type MAIN LPAREN . RPAREN LBRACE fake_1 statements RBRACE

    RPAREN  shift, and go to state 40


State 31

   46 decl_stmt: Type b_AND ID . ASSIGN ID

    ASSIGN  shift, and go to state 41


State 32

   90 array_decl: Type ARRAY ASSIGN . arr_assign_expr

    LBRACE  shift, and go to state 42

    arr_assign_expr  转到状态 43


State 33

   93 ARRAY: ARRAY LMPAREN . INTEGER_D RMPAREN

    INTEGER_D  shift, and go to state 44


State 34

   40 decl_stmt: Type ID ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 55
    INT_CONST  转到状态 56
    ID         转到状态 57


State 35

  101 ID: IDENTIFIER LMPAREN . INTEGER_D RMPAREN
  102   | IDENTIFIER LMPAREN . ID RMPAREN

    IDENTIFIER  shift, and go to state 26
    INTEGER_D   shift, and go to state 58

    ID  转到状态 39


State 36

   42 decl_stmt: decl_stmt COMMA ID ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 59
    INT_CONST  转到状态 56
    ID         转到状态 57


State 37

   44 decl_stmt: Type MUL ID ASSIGN . b_AND expr

    b_AND  shift, and go to state 60


State 38

   92 ARRAY: IDENTIFIER LMPAREN INTEGER_D . RMPAREN
  101 ID: IDENTIFIER LMPAREN INTEGER_D . RMPAREN

    RMPAREN  shift, and go to state 61


State 39

  102 ID: IDENTIFIER LMPAREN ID . RMPAREN

    RMPAREN  shift, and go to state 62


State 40

    7 Func_Def: Type MAIN LPAREN RPAREN . LBRACE fake_1 statements RBRACE

    LBRACE  shift, and go to state 63


State 41

   46 decl_stmt: Type b_AND ID ASSIGN . ID

    IDENTIFIER  shift, and go to state 26

    ID  转到状态 64


State 42

   94 arr_assign_expr: LBRACE . arr_element RBRACE

    INTEGER_H  shift, and go to state 48
    INTEGER_D  shift, and go to state 49
    INTEGER_O  shift, and go to state 50
    INTEGER_B  shift, and go to state 51
    CHAR       shift, and go to state 65
    STRING     shift, and go to state 66

    INT_CONST    转到状态 67
    arr_element  转到状态 68
    arr_ele      转到状态 69


State 43

   90 array_decl: Type ARRAY ASSIGN arr_assign_expr .

    $default  reduce using rule 90 (array_decl)


State 44

   93 ARRAY: ARRAY LMPAREN INTEGER_D . RMPAREN

    RMPAREN  shift, and go to state 70


State 45

   33 expr: NOT . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 71
    INT_CONST  转到状态 56
    ID         转到状态 57


State 46

   30 expr: SUB . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 72
    INT_CONST  转到状态 56
    ID         转到状态 57


State 47

   24 expr: LPAREN . expr RPAREN

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 73
    INT_CONST  转到状态 56
    ID         转到状态 57


State 48

   86 INT_CONST: INTEGER_H .

    $default  reduce using rule 86 (INT_CONST)


State 49

   87 INT_CONST: INTEGER_D .

    $default  reduce using rule 87 (INT_CONST)


State 50

   88 INT_CONST: INTEGER_O .

    $default  reduce using rule 88 (INT_CONST)


State 51

   89 INT_CONST: INTEGER_B .

    $default  reduce using rule 89 (INT_CONST)


State 52

   21 expr: CHAR .

    $default  reduce using rule 21 (expr)


State 53

   23 expr: BOOL .

    $default  reduce using rule 23 (expr)


State 54

   22 expr: STRING .

    $default  reduce using rule 22 (expr)


State 55

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   40 decl_stmt: Type ID ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 40 (decl_stmt)


State 56

   20 expr: INT_CONST .

    $default  reduce using rule 20 (expr)


State 57

   19 expr: ID .

    $default  reduce using rule 19 (expr)


State 58

  101 ID: IDENTIFIER LMPAREN INTEGER_D . RMPAREN

    RMPAREN  shift, and go to state 87


State 59

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   42 decl_stmt: decl_stmt COMMA ID ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 42 (decl_stmt)


State 60

   44 decl_stmt: Type MUL ID ASSIGN b_AND . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 88
    INT_CONST  转到状态 56
    ID         转到状态 57


State 61

   92 ARRAY: IDENTIFIER LMPAREN INTEGER_D RMPAREN .
  101 ID: IDENTIFIER LMPAREN INTEGER_D RMPAREN .

    ASSIGN     reduce using rule 92 (ARRAY)
    ASSIGN     [reduce using rule 101 (ID)]
    SEMICOLON  reduce using rule 92 (ARRAY)
    SEMICOLON  [reduce using rule 101 (ID)]
    COMMA      reduce using rule 92 (ARRAY)
    COMMA      [reduce using rule 101 (ID)]
    $default   reduce using rule 92 (ARRAY)


State 62

  102 ID: IDENTIFIER LMPAREN ID RMPAREN .

    $default  reduce using rule 102 (ID)


State 63

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE . fake_1 statements RBRACE

    $default  reduce using rule 8 (fake_1)

    fake_1  转到状态 89


State 64

   46 decl_stmt: Type b_AND ID ASSIGN ID .

    $default  reduce using rule 46 (decl_stmt)


State 65

   98 arr_ele: CHAR .

    $default  reduce using rule 98 (arr_ele)


State 66

   99 arr_ele: STRING .

    $default  reduce using rule 99 (arr_ele)


State 67

   97 arr_ele: INT_CONST .

    $default  reduce using rule 97 (arr_ele)


State 68

   94 arr_assign_expr: LBRACE arr_element . RBRACE
   96 arr_element: arr_element . COMMA arr_ele

    COMMA   shift, and go to state 90
    RBRACE  shift, and go to state 91


State 69

   95 arr_element: arr_ele .

    $default  reduce using rule 95 (arr_element)


State 70

   93 ARRAY: ARRAY LMPAREN INTEGER_D RMPAREN .

    $default  reduce using rule 93 (ARRAY)


State 71

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   33     | NOT expr .
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 33 (expr)


State 72

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   30     | SUB expr .
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 30 (expr)


State 73

   24 expr: LPAREN expr . RPAREN
   25     | expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    RPAREN     shift, and go to state 92


State 74

   39 expr: expr EQ . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 93
    INT_CONST  转到状态 56
    ID         转到状态 57


State 75

   38 expr: expr NOT_EQ . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 94
    INT_CONST  转到状态 56
    ID         转到状态 57


State 76

   35 expr: expr LESS_THAN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 95
    INT_CONST  转到状态 56
    ID         转到状态 57


State 77

   34 expr: expr LESS_EQ . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 96
    INT_CONST  转到状态 56
    ID         转到状态 57


State 78

   37 expr: expr MORE_THAN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 97
    INT_CONST  转到状态 56
    ID         转到状态 57


State 79

   36 expr: expr MORE_EQ . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 98
    INT_CONST  转到状态 56
    ID         转到状态 57


State 80

   31 expr: expr AND . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 99
    INT_CONST  转到状态 56
    ID         转到状态 57


State 81

   32 expr: expr OR . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 100
    INT_CONST  转到状态 56
    ID         转到状态 57


State 82

   25 expr: expr ADD . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 101
    INT_CONST  转到状态 56
    ID         转到状态 57


State 83

   26 expr: expr SUB . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 102
    INT_CONST  转到状态 56
    ID         转到状态 57


State 84

   27 expr: expr MUL . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 103
    INT_CONST  转到状态 56
    ID         转到状态 57


State 85

   28 expr: expr DIV . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 104
    INT_CONST  转到状态 56
    ID         转到状态 57


State 86

   29 expr: expr MOD . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 105
    INT_CONST  转到状态 56
    ID         转到状态 57


State 87

  101 ID: IDENTIFIER LMPAREN INTEGER_D RMPAREN .

    $default  reduce using rule 101 (ID)


State 88

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   44 decl_stmt: Type MUL ID ASSIGN b_AND expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 44 (decl_stmt)


State 89

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statements              转到状态 114
    statement               转到状态 115
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 90

   96 arr_element: arr_element COMMA . arr_ele

    INTEGER_H  shift, and go to state 48
    INTEGER_D  shift, and go to state 49
    INTEGER_O  shift, and go to state 50
    INTEGER_B  shift, and go to state 51
    CHAR       shift, and go to state 65
    STRING     shift, and go to state 66

    INT_CONST  转到状态 67
    arr_ele    转到状态 126


State 91

   94 arr_assign_expr: LBRACE arr_element RBRACE .

    $default  reduce using rule 94 (arr_assign_expr)


State 92

   24 expr: LPAREN expr RPAREN .

    $default  reduce using rule 24 (expr)


State 93

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   39     | expr EQ expr .

    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 39 (expr)


State 94

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   38     | expr NOT_EQ expr .
   39     | expr . EQ expr

    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 38 (expr)


State 95

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   35     | expr LESS_THAN expr .
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 35 (expr)


State 96

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   34     | expr LESS_EQ expr .
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 34 (expr)


State 97

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   37     | expr MORE_THAN expr .
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 37 (expr)


State 98

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   36     | expr MORE_EQ expr .
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 36 (expr)


State 99

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   31     | expr AND expr .
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 31 (expr)


State 100

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   32     | expr OR expr .
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 32 (expr)


State 101

   25 expr: expr . ADD expr
   25     | expr ADD expr .
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 25 (expr)


State 102

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   26     | expr SUB expr .
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    MUL  shift, and go to state 84
    DIV  shift, and go to state 85
    MOD  shift, and go to state 86

    $default  reduce using rule 26 (expr)


State 103

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   27     | expr MUL expr .
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 27 (expr)


State 104

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   28     | expr DIV expr .
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 28 (expr)


State 105

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   29     | expr MOD expr .
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr

    $default  reduce using rule 29 (expr)


State 106

   11 statement: SEMICOLON .

    $default  reduce using rule 11 (statement)


State 107

   17 statement: LBRACE . fake_2 statements RBRACE

    $default  reduce using rule 18 (fake_2)

    fake_2  转到状态 127


State 108

   16 statement: RETURN . INT_CONST SEMICOLON

    INTEGER_H  shift, and go to state 48
    INTEGER_D  shift, and go to state 49
    INTEGER_O  shift, and go to state 50
    INTEGER_B  shift, and go to state 51

    INT_CONST  转到状态 128


State 109

   66 if_else_while_for_stmt: FOR . LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    LPAREN  shift, and go to state 129


State 110

   65 if_else_while_for_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 130


State 111

   67 if_else_stmt: IF . LPAREN expr RPAREN statement
   68             | IF . LPAREN expr RPAREN statement ELSE statement
   70 if_else_if: IF . LPAREN expr RPAREN statement ELSE_IF LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 131


State 112

   57 IO_stmt: PRINTF . LPAREN STRING COMMA O_expr RPAREN
   58        | PRINTF . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 132


State 113

   59 IO_stmt: SCANF . LPAREN STRING COMMA I_expr RPAREN

    LPAREN  shift, and go to state 133


State 114

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements . RBRACE
   10 statements: statements . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    RBRACE      shift, and go to state 134
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 135
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 115

    9 statements: statement .

    $default  reduce using rule 9 (statements)


State 116

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   53 assign_stmt: expr . SELF_ADD
   54            | expr . SELF_SUB

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    SELF_ADD   shift, and go to state 136
    SELF_SUB   shift, and go to state 137


State 117

   12 statement: decl_stmt . SEMICOLON
   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID

    SEMICOLON  shift, and go to state 138
    COMMA      shift, and go to state 19


State 118

   13 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 119

   48 assign_stmt: base_assign_stmt .

    $default  reduce using rule 48 (assign_stmt)


State 120

   14 statement: IO_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 121

   15 statement: if_else_while_for_stmt .

    $default  reduce using rule 15 (statement)


State 122

   64 if_else_while_for_stmt: if_else_stmt .

    $default  reduce using rule 64 (if_else_while_for_stmt)


State 123

   69 if_else_stmt: if_else_if . ELSE statement
   71 if_else_if: if_else_if . ELSE_IF LPAREN expr RPAREN statement

    ELSE     shift, and go to state 141
    ELSE_IF  shift, and go to state 142


State 124

   40 decl_stmt: Type . ID ASSIGN expr
   41          | Type . ID
   44          | Type . MUL ID ASSIGN b_AND expr
   45          | Type . MUL ID
   46          | Type . b_AND ID ASSIGN ID
   90 array_decl: Type . ARRAY ASSIGN arr_assign_expr
   91           | Type . ARRAY

    MUL         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    b_AND       shift, and go to state 23

    ARRAY  转到状态 24
    ID     转到状态 25


State 125

   19 expr: ID .
   49 assign_stmt: ID . ADD_ASSIGN expr
   50            | ID . SUB_ASSIGN expr
   51            | ID . MUL_ASSIGN expr
   52            | ID . DIV_ASSIGN expr
   55 base_assign_stmt: ID . ASSIGN expr
   56                 | ID . ASSIGN base_assign_stmt

    ASSIGN      shift, and go to state 143
    ADD_ASSIGN  shift, and go to state 144
    SUB_ASSIGN  shift, and go to state 145
    MUL_ASSIGN  shift, and go to state 146
    DIV_ASSIGN  shift, and go to state 147

    $default  reduce using rule 19 (expr)


State 126

   96 arr_element: arr_element COMMA arr_ele .

    $default  reduce using rule 96 (arr_element)


State 127

   17 statement: LBRACE fake_2 . statements RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statements              转到状态 148
    statement               转到状态 115
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 128

   16 statement: RETURN INT_CONST . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 129

   66 if_else_while_for_stmt: FOR LPAREN . for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    $default  reduce using rule 74 (for_expr_1)

    expr              转到状态 116
    decl_stmt         转到状态 150
    assign_stmt       转到状态 151
    base_assign_stmt  转到状态 119
    for_expr_1        转到状态 152
    Type              转到状态 124
    INT_CONST         转到状态 56
    array_decl        转到状态 12
    ID                转到状态 125


State 130

   65 if_else_while_for_stmt: WHILE LPAREN . expr RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 153
    INT_CONST  转到状态 56
    ID         转到状态 57


State 131

   67 if_else_stmt: IF LPAREN . expr RPAREN statement
   68             | IF LPAREN . expr RPAREN statement ELSE statement
   70 if_else_if: IF LPAREN . expr RPAREN statement ELSE_IF LPAREN expr RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 154
    INT_CONST  转到状态 56
    ID         转到状态 57


State 132

   57 IO_stmt: PRINTF LPAREN . STRING COMMA O_expr RPAREN
   58        | PRINTF LPAREN . STRING RPAREN

    STRING  shift, and go to state 155


State 133

   59 IO_stmt: SCANF LPAREN . STRING COMMA I_expr RPAREN

    STRING  shift, and go to state 156


State 134

    7 Func_Def: Type MAIN LPAREN RPAREN LBRACE fake_1 statements RBRACE .

    $default  reduce using rule 7 (Func_Def)


State 135

   10 statements: statements statement .

    $default  reduce using rule 10 (statements)


State 136

   53 assign_stmt: expr SELF_ADD .

    $default  reduce using rule 53 (assign_stmt)


State 137

   54 assign_stmt: expr SELF_SUB .

    $default  reduce using rule 54 (assign_stmt)


State 138

   12 statement: decl_stmt SEMICOLON .

    $default  reduce using rule 12 (statement)


State 139

   13 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 13 (statement)


State 140

   14 statement: IO_stmt SEMICOLON .

    $default  reduce using rule 14 (statement)


State 141

   69 if_else_stmt: if_else_if ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 157
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 142

   71 if_else_if: if_else_if ELSE_IF . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 158


State 143

   55 base_assign_stmt: ID ASSIGN . expr
   56                 | ID ASSIGN . base_assign_stmt

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr              转到状态 159
    base_assign_stmt  转到状态 160
    INT_CONST         转到状态 56
    ID                转到状态 161


State 144

   49 assign_stmt: ID ADD_ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 162
    INT_CONST  转到状态 56
    ID         转到状态 57


State 145

   50 assign_stmt: ID SUB_ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 163
    INT_CONST  转到状态 56
    ID         转到状态 57


State 146

   51 assign_stmt: ID MUL_ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 164
    INT_CONST  转到状态 56
    ID         转到状态 57


State 147

   52 assign_stmt: ID DIV_ASSIGN . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 165
    INT_CONST  转到状态 56
    ID         转到状态 57


State 148

   10 statements: statements . statement
   17 statement: LBRACE fake_2 statements . RBRACE

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    RBRACE      shift, and go to state 166
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 135
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 149

   16 statement: RETURN INT_CONST SEMICOLON .

    $default  reduce using rule 16 (statement)


State 150

   42 decl_stmt: decl_stmt . COMMA ID ASSIGN expr
   43          | decl_stmt . COMMA ID
   72 for_expr_1: decl_stmt .

    COMMA  shift, and go to state 19

    $default  reduce using rule 72 (for_expr_1)


State 151

   73 for_expr_1: assign_stmt .

    $default  reduce using rule 73 (for_expr_1)


State 152

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 . SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 167


State 153

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   65 if_else_while_for_stmt: WHILE LPAREN expr . RPAREN statement

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    RPAREN     shift, and go to state 168


State 154

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   67 if_else_stmt: IF LPAREN expr . RPAREN statement
   68             | IF LPAREN expr . RPAREN statement ELSE statement
   70 if_else_if: IF LPAREN expr . RPAREN statement ELSE_IF LPAREN expr RPAREN statement

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    RPAREN     shift, and go to state 169


State 155

   57 IO_stmt: PRINTF LPAREN STRING . COMMA O_expr RPAREN
   58        | PRINTF LPAREN STRING . RPAREN

    COMMA   shift, and go to state 170
    RPAREN  shift, and go to state 171


State 156

   59 IO_stmt: SCANF LPAREN STRING . COMMA I_expr RPAREN

    COMMA  shift, and go to state 172


State 157

   69 if_else_stmt: if_else_if ELSE statement .

    $default  reduce using rule 69 (if_else_stmt)


State 158

   71 if_else_if: if_else_if ELSE_IF LPAREN . expr RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 173
    INT_CONST  转到状态 56
    ID         转到状态 57


State 159

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   55 base_assign_stmt: ID ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 55 (base_assign_stmt)


State 160

   56 base_assign_stmt: ID ASSIGN base_assign_stmt .

    $default  reduce using rule 56 (base_assign_stmt)


State 161

   19 expr: ID .
   55 base_assign_stmt: ID . ASSIGN expr
   56                 | ID . ASSIGN base_assign_stmt

    ASSIGN  shift, and go to state 143

    $default  reduce using rule 19 (expr)


State 162

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   49 assign_stmt: ID ADD_ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 49 (assign_stmt)


State 163

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   50 assign_stmt: ID SUB_ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 50 (assign_stmt)


State 164

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   51 assign_stmt: ID MUL_ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 51 (assign_stmt)


State 165

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   52 assign_stmt: ID DIV_ASSIGN expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 52 (assign_stmt)


State 166

   17 statement: LBRACE fake_2 statements RBRACE .

    $default  reduce using rule 17 (statement)


State 167

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON . for_expr_2 SEMICOLON for_expr_3 RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    $default  reduce using rule 76 (for_expr_2)

    expr        转到状态 174
    for_expr_2  转到状态 175
    INT_CONST   转到状态 56
    ID          转到状态 57


State 168

   65 if_else_while_for_stmt: WHILE LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 176
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 169

   67 if_else_stmt: IF LPAREN expr RPAREN . statement
   68             | IF LPAREN expr RPAREN . statement ELSE statement
   70 if_else_if: IF LPAREN expr RPAREN . statement ELSE_IF LPAREN expr RPAREN statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 177
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 170

   57 IO_stmt: PRINTF LPAREN STRING COMMA . O_expr RPAREN

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 178
    O_expr     转到状态 179
    INT_CONST  转到状态 56
    ID         转到状态 57


State 171

   58 IO_stmt: PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 58 (IO_stmt)


State 172

   59 IO_stmt: SCANF LPAREN STRING COMMA . I_expr RPAREN

    b_AND  shift, and go to state 180

    I_expr  转到状态 181


State 173

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   71 if_else_if: if_else_if ELSE_IF LPAREN expr . RPAREN statement

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    RPAREN     shift, and go to state 182


State 174

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   75 for_expr_2: expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 75 (for_expr_2)


State 175

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 . SEMICOLON for_expr_3 RPAREN statement

    SEMICOLON  shift, and go to state 183


State 176

   65 if_else_while_for_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 65 (if_else_while_for_stmt)


State 177

   67 if_else_stmt: IF LPAREN expr RPAREN statement .
   68             | IF LPAREN expr RPAREN statement . ELSE statement
   70 if_else_if: IF LPAREN expr RPAREN statement . ELSE_IF LPAREN expr RPAREN statement

    ELSE     shift, and go to state 184
    ELSE_IF  shift, and go to state 185

    ELSE      [reduce using rule 67 (if_else_stmt)]
    ELSE_IF   [reduce using rule 67 (if_else_stmt)]
    $default  reduce using rule 67 (if_else_stmt)


State 178

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   60 O_expr: expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 60 (O_expr)


State 179

   57 IO_stmt: PRINTF LPAREN STRING COMMA O_expr . RPAREN
   61 O_expr: O_expr . COMMA expr

    COMMA   shift, and go to state 186
    RPAREN  shift, and go to state 187


State 180

   62 I_expr: b_AND . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 188
    INT_CONST  转到状态 56
    ID         转到状态 57


State 181

   59 IO_stmt: SCANF LPAREN STRING COMMA I_expr . RPAREN
   63 I_expr: I_expr . COMMA b_AND expr

    COMMA   shift, and go to state 189
    RPAREN  shift, and go to state 190


State 182

   71 if_else_if: if_else_if ELSE_IF LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 191
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 183

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON . for_expr_3 RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    $default  reduce using rule 78 (for_expr_3)

    expr              转到状态 116
    assign_stmt       转到状态 192
    base_assign_stmt  转到状态 119
    for_expr_3        转到状态 193
    INT_CONST         转到状态 56
    ID                转到状态 125


State 184

   68 if_else_stmt: IF LPAREN expr RPAREN statement ELSE . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 194
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 185

   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 195


State 186

   61 O_expr: O_expr COMMA . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 196
    INT_CONST  转到状态 56
    ID         转到状态 57


State 187

   57 IO_stmt: PRINTF LPAREN STRING COMMA O_expr RPAREN .

    $default  reduce using rule 57 (IO_stmt)


State 188

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   62 I_expr: b_AND expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 62 (I_expr)


State 189

   63 I_expr: I_expr COMMA . b_AND expr

    b_AND  shift, and go to state 197


State 190

   59 IO_stmt: SCANF LPAREN STRING COMMA I_expr RPAREN .

    $default  reduce using rule 59 (IO_stmt)


State 191

   71 if_else_if: if_else_if ELSE_IF LPAREN expr RPAREN statement .

    $default  reduce using rule 71 (if_else_if)


State 192

   77 for_expr_3: assign_stmt .

    $default  reduce using rule 77 (for_expr_3)


State 193

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 . RPAREN statement

    RPAREN  shift, and go to state 198


State 194

   68 if_else_stmt: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 68 (if_else_stmt)


State 195

   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF LPAREN . expr RPAREN statement

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 199
    INT_CONST  转到状态 56
    ID         转到状态 57


State 196

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   61 O_expr: O_expr COMMA expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 61 (O_expr)


State 197

   63 I_expr: I_expr COMMA b_AND . expr

    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    LPAREN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54

    expr       转到状态 200
    INT_CONST  转到状态 56
    ID         转到状态 57


State 198

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 201
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 199

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF LPAREN expr . RPAREN statement

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86
    RPAREN     shift, and go to state 202


State 200

   25 expr: expr . ADD expr
   26     | expr . SUB expr
   27     | expr . MUL expr
   28     | expr . DIV expr
   29     | expr . MOD expr
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . LESS_EQ expr
   35     | expr . LESS_THAN expr
   36     | expr . MORE_EQ expr
   37     | expr . MORE_THAN expr
   38     | expr . NOT_EQ expr
   39     | expr . EQ expr
   63 I_expr: I_expr COMMA b_AND expr .

    EQ         shift, and go to state 74
    NOT_EQ     shift, and go to state 75
    LESS_THAN  shift, and go to state 76
    LESS_EQ    shift, and go to state 77
    MORE_THAN  shift, and go to state 78
    MORE_EQ    shift, and go to state 79
    AND        shift, and go to state 80
    OR         shift, and go to state 81
    ADD        shift, and go to state 82
    SUB        shift, and go to state 83
    MUL        shift, and go to state 84
    DIV        shift, and go to state 85
    MOD        shift, and go to state 86

    $default  reduce using rule 63 (I_expr)


State 201

   66 if_else_while_for_stmt: FOR LPAREN for_expr_1 SEMICOLON for_expr_2 SEMICOLON for_expr_3 RPAREN statement .

    $default  reduce using rule 66 (if_else_while_for_stmt)


State 202

   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF LPAREN expr RPAREN . statement

    T_INT       shift, and go to state 1
    T_CHAR      shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_STRING    shift, and go to state 4
    T_VOID      shift, and go to state 5
    CONST       shift, and go to state 6
    NOT         shift, and go to state 45
    SUB         shift, and go to state 46
    SEMICOLON   shift, and go to state 106
    LPAREN      shift, and go to state 47
    LBRACE      shift, and go to state 107
    IDENTIFIER  shift, and go to state 26
    INTEGER_H   shift, and go to state 48
    INTEGER_D   shift, and go to state 49
    INTEGER_O   shift, and go to state 50
    INTEGER_B   shift, and go to state 51
    CHAR        shift, and go to state 52
    BOOL        shift, and go to state 53
    STRING      shift, and go to state 54
    RETURN      shift, and go to state 108
    FOR         shift, and go to state 109
    WHILE       shift, and go to state 110
    IF          shift, and go to state 111
    PRINTF      shift, and go to state 112
    SCANF       shift, and go to state 113

    statement               转到状态 203
    expr                    转到状态 116
    decl_stmt               转到状态 117
    assign_stmt             转到状态 118
    base_assign_stmt        转到状态 119
    IO_stmt                 转到状态 120
    if_else_while_for_stmt  转到状态 121
    if_else_stmt            转到状态 122
    if_else_if              转到状态 123
    Type                    转到状态 124
    INT_CONST               转到状态 56
    array_decl              转到状态 12
    ID                      转到状态 125


State 203

   70 if_else_if: IF LPAREN expr RPAREN statement ELSE_IF LPAREN expr RPAREN statement .

    $default  reduce using rule 70 (if_else_if)
